Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: externdef $@1 program
    3        | %empty

    4 externdef: function
    5          | declaration

    6 function: declarator LP parameters RP compoundstmt

    7 parameters: parameters COMMA declarator
    8           | declarator
    9           | TYPE_VOID
   10           | %empty

   11 declaration: declarator SEM
   12            | declarator OP_ASSIGN expr SEM

   13 declarator: type identifier

   14 type: TYPE_INT

   15 identifier: ID

   16 statement: compoundstmt
   17          | exprstmt
   18          | ctrlstmt

   19 compoundstmt: LBR items RBR

   20 items: items item
   21      | %empty

   22 item: declaration
   23     | statement

   24 exprstmt: expr SEM
   25         | SEM

   26 expr: identifier OP_ASSIGN expr
   27     | logorexpr

   28 logorexpr: logorexpr OP_LOGOR logandexpr
   29          | logandexpr

   30 logandexpr: logandexpr OP_LOGAND orexpr
   31           | orexpr

   32 orexpr: orexpr OP_OR xorexpr
   33       | xorexpr

   34 xorexpr: xorexpr OP_XOR andexpr
   35        | andexpr

   36 andexpr: andexpr OP_AND ecmprexpr
   37        | ecmprexpr

   38 ecmprexpr: ecmprexpr OP_EQ cmprexpr
   39          | ecmprexpr OP_NEQ cmprexpr
   40          | cmprexpr

   41 cmprexpr: cmprexpr OP_GT addexpr
   42         | cmprexpr OP_LT addexpr
   43         | cmprexpr OP_GTE addexpr
   44         | cmprexpr OP_LTE addexpr
   45         | addexpr

   46 addexpr: addexpr OP_ADD mulexpr
   47        | addexpr OP_SUB mulexpr
   48        | mulexpr

   49 mulexpr: mulexpr OP_MUL factor
   50        | mulexpr OP_DIV factor
   51        | mulexpr OP_MOD factor
   52        | OP_SUB factor
   53        | factor

   54 factor: identifier
   55       | constant
   56       | LP expr RP

   57 constant: INT

   58 ctrlstmt: IF LP expr RP statement
   59         | IF LP expr RP statement ELSE statement
   60         | WHILE LP expr RP statement
   61         | FOR LP initstmt exprstmt expr RP statement
   62         | FOR LP initstmt exprstmt RP statement

   63 initstmt: exprstmt
   64         | declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <intNum> (258) 57
    ID <str> (259) 15
    TYPE_INT (260) 14
    TYPE_VOID (261) 9
    OP_ADD (262) 46
    OP_SUB (263) 47 52
    OP_MUL (264) 49
    OP_DIV (265) 50
    OP_MOD (266) 51
    OP_GT (267) 41
    OP_LT (268) 42
    OP_GTE (269) 43
    OP_LTE (270) 44
    OP_EQ (271) 38
    OP_NEQ (272) 39
    OP_AND (273) 36
    OP_XOR (274) 34
    OP_OR (275) 32
    OP_LOGAND (276) 30
    OP_LOGOR (277) 28
    OP_ASSIGN (278) 12 26
    LP (279) 6 56 58 59 60 61 62
    RP (280) 6 56 58 59 60 61 62
    LBR (281) 19
    RBR (282) 19
    SEM (283) 11 12 24 25
    COMMA (284) 7
    IF (285) 58 59
    ELSE (286) 59
    WHILE (287) 60
    FOR (288) 61 62
    IFX (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 2 3
        on right: 0 2
    $@1 (37)
        on left: 1
        on right: 2
    externdef <node> (38)
        on left: 4 5
        on right: 2
    function <node> (39)
        on left: 6
        on right: 4
    parameters <parameters> (40)
        on left: 7 8 9 10
        on right: 6 7
    declaration <node> (41)
        on left: 11 12
        on right: 5 22 64
    declarator <declarator> (42)
        on left: 13
        on right: 6 7 8 11 12
    type <node> (43)
        on left: 14
        on right: 13
    identifier <node> (44)
        on left: 15
        on right: 13 26 54
    statement <node> (45)
        on left: 16 17 18
        on right: 23 58 59 60 61 62
    compoundstmt <node> (46)
        on left: 19
        on right: 6 16
    items <compound> (47)
        on left: 20 21
        on right: 19 20
    item <node> (48)
        on left: 22 23
        on right: 20
    exprstmt <node> (49)
        on left: 24 25
        on right: 17 61 62 63
    expr <node> (50)
        on left: 26 27
        on right: 12 24 26 56 58 59 60 61
    logorexpr <node> (51)
        on left: 28 29
        on right: 27 28
    logandexpr <node> (52)
        on left: 30 31
        on right: 28 29 30
    orexpr <node> (53)
        on left: 32 33
        on right: 30 31 32
    xorexpr <node> (54)
        on left: 34 35
        on right: 32 33 34
    andexpr <node> (55)
        on left: 36 37
        on right: 34 35 36
    ecmprexpr <node> (56)
        on left: 38 39 40
        on right: 36 37 38 39
    cmprexpr <node> (57)
        on left: 41 42 43 44 45
        on right: 38 39 40 41 42 43 44
    addexpr <node> (58)
        on left: 46 47 48
        on right: 41 42 43 44 45 46 47
    mulexpr <node> (59)
        on left: 49 50 51 52 53
        on right: 46 47 48 49 50 51
    factor <node> (60)
        on left: 54 55 56
        on right: 49 50 51 52 53
    constant <node> (61)
        on left: 57
        on right: 55
    ctrlstmt <node> (62)
        on left: 58 59 60 61 62
        on right: 18
    initstmt <node> (63)
        on left: 63 64
        on right: 61 62


State 0

    0 $accept: . program $end

    TYPE_INT  shift, and go to state 1

    $default  reduce using rule 3 (program)

    program      go to state 2
    externdef    go to state 3
    function     go to state 4
    declaration  go to state 5
    declarator   go to state 6
    type         go to state 7


State 1

   14 type: TYPE_INT .

    $default  reduce using rule 14 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    2 program: externdef . $@1 program

    $default  reduce using rule 1 ($@1)

    $@1  go to state 9


State 4

    4 externdef: function .

    $default  reduce using rule 4 (externdef)


State 5

    5 externdef: declaration .

    $default  reduce using rule 5 (externdef)


State 6

    6 function: declarator . LP parameters RP compoundstmt
   11 declaration: declarator . SEM
   12            | declarator . OP_ASSIGN expr SEM

    OP_ASSIGN  shift, and go to state 10
    LP         shift, and go to state 11
    SEM        shift, and go to state 12


State 7

   13 declarator: type . identifier

    ID  shift, and go to state 13

    identifier  go to state 14


State 8

    0 $accept: program $end .

    $default  accept


State 9

    2 program: externdef $@1 . program

    TYPE_INT  shift, and go to state 1

    $default  reduce using rule 3 (program)

    program      go to state 15
    externdef    go to state 3
    function     go to state 4
    declaration  go to state 5
    declarator   go to state 6
    type         go to state 7


State 10

   12 declaration: declarator OP_ASSIGN . expr SEM

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 19
    expr        go to state 20
    logorexpr   go to state 21
    logandexpr  go to state 22
    orexpr      go to state 23
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 11

    6 function: declarator LP . parameters RP compoundstmt

    TYPE_INT   shift, and go to state 1
    TYPE_VOID  shift, and go to state 32

    $default  reduce using rule 10 (parameters)

    parameters  go to state 33
    declarator  go to state 34
    type        go to state 7


State 12

   11 declaration: declarator SEM .

    $default  reduce using rule 11 (declaration)


State 13

   15 identifier: ID .

    $default  reduce using rule 15 (identifier)


State 14

   13 declarator: type identifier .

    $default  reduce using rule 13 (declarator)


State 15

    2 program: externdef $@1 program .

    $default  reduce using rule 2 (program)


State 16

   57 constant: INT .

    $default  reduce using rule 57 (constant)


State 17

   52 mulexpr: OP_SUB . factor

    INT  shift, and go to state 16
    ID   shift, and go to state 13
    LP   shift, and go to state 18

    identifier  go to state 35
    factor      go to state 36
    constant    go to state 31


State 18

   56 factor: LP . expr RP

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 19
    expr        go to state 37
    logorexpr   go to state 21
    logandexpr  go to state 22
    orexpr      go to state 23
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 19

   26 expr: identifier . OP_ASSIGN expr
   54 factor: identifier .

    OP_ASSIGN  shift, and go to state 38

    $default  reduce using rule 54 (factor)


State 20

   12 declaration: declarator OP_ASSIGN expr . SEM

    SEM  shift, and go to state 39


State 21

   27 expr: logorexpr .
   28 logorexpr: logorexpr . OP_LOGOR logandexpr

    OP_LOGOR  shift, and go to state 40

    $default  reduce using rule 27 (expr)


State 22

   29 logorexpr: logandexpr .
   30 logandexpr: logandexpr . OP_LOGAND orexpr

    OP_LOGAND  shift, and go to state 41

    $default  reduce using rule 29 (logorexpr)


State 23

   31 logandexpr: orexpr .
   32 orexpr: orexpr . OP_OR xorexpr

    OP_OR  shift, and go to state 42

    $default  reduce using rule 31 (logandexpr)


State 24

   33 orexpr: xorexpr .
   34 xorexpr: xorexpr . OP_XOR andexpr

    OP_XOR  shift, and go to state 43

    $default  reduce using rule 33 (orexpr)


State 25

   35 xorexpr: andexpr .
   36 andexpr: andexpr . OP_AND ecmprexpr

    OP_AND  shift, and go to state 44

    $default  reduce using rule 35 (xorexpr)


State 26

   37 andexpr: ecmprexpr .
   38 ecmprexpr: ecmprexpr . OP_EQ cmprexpr
   39          | ecmprexpr . OP_NEQ cmprexpr

    OP_EQ   shift, and go to state 45
    OP_NEQ  shift, and go to state 46

    $default  reduce using rule 37 (andexpr)


State 27

   40 ecmprexpr: cmprexpr .
   41 cmprexpr: cmprexpr . OP_GT addexpr
   42         | cmprexpr . OP_LT addexpr
   43         | cmprexpr . OP_GTE addexpr
   44         | cmprexpr . OP_LTE addexpr

    OP_GT   shift, and go to state 47
    OP_LT   shift, and go to state 48
    OP_GTE  shift, and go to state 49
    OP_LTE  shift, and go to state 50

    $default  reduce using rule 40 (ecmprexpr)


State 28

   45 cmprexpr: addexpr .
   46 addexpr: addexpr . OP_ADD mulexpr
   47        | addexpr . OP_SUB mulexpr

    OP_ADD  shift, and go to state 51
    OP_SUB  shift, and go to state 52

    $default  reduce using rule 45 (cmprexpr)


State 29

   48 addexpr: mulexpr .
   49 mulexpr: mulexpr . OP_MUL factor
   50        | mulexpr . OP_DIV factor
   51        | mulexpr . OP_MOD factor

    OP_MUL  shift, and go to state 53
    OP_DIV  shift, and go to state 54
    OP_MOD  shift, and go to state 55

    $default  reduce using rule 48 (addexpr)


State 30

   53 mulexpr: factor .

    $default  reduce using rule 53 (mulexpr)


State 31

   55 factor: constant .

    $default  reduce using rule 55 (factor)


State 32

    9 parameters: TYPE_VOID .

    $default  reduce using rule 9 (parameters)


State 33

    6 function: declarator LP parameters . RP compoundstmt
    7 parameters: parameters . COMMA declarator

    RP     shift, and go to state 56
    COMMA  shift, and go to state 57


State 34

    8 parameters: declarator .

    $default  reduce using rule 8 (parameters)


State 35

   54 factor: identifier .

    $default  reduce using rule 54 (factor)


State 36

   52 mulexpr: OP_SUB factor .

    $default  reduce using rule 52 (mulexpr)


State 37

   56 factor: LP expr . RP

    RP  shift, and go to state 58


State 38

   26 expr: identifier OP_ASSIGN . expr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 19
    expr        go to state 59
    logorexpr   go to state 21
    logandexpr  go to state 22
    orexpr      go to state 23
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 39

   12 declaration: declarator OP_ASSIGN expr SEM .

    $default  reduce using rule 12 (declaration)


State 40

   28 logorexpr: logorexpr OP_LOGOR . logandexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    logandexpr  go to state 60
    orexpr      go to state 23
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 41

   30 logandexpr: logandexpr OP_LOGAND . orexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    orexpr      go to state 61
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 42

   32 orexpr: orexpr OP_OR . xorexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    xorexpr     go to state 62
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 43

   34 xorexpr: xorexpr OP_XOR . andexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    andexpr     go to state 63
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 44

   36 andexpr: andexpr OP_AND . ecmprexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    ecmprexpr   go to state 64
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 45

   38 ecmprexpr: ecmprexpr OP_EQ . cmprexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    cmprexpr    go to state 65
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 46

   39 ecmprexpr: ecmprexpr OP_NEQ . cmprexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    cmprexpr    go to state 66
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 47

   41 cmprexpr: cmprexpr OP_GT . addexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    addexpr     go to state 67
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 48

   42 cmprexpr: cmprexpr OP_LT . addexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    addexpr     go to state 68
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 49

   43 cmprexpr: cmprexpr OP_GTE . addexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    addexpr     go to state 69
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 50

   44 cmprexpr: cmprexpr OP_LTE . addexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    addexpr     go to state 70
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 51

   46 addexpr: addexpr OP_ADD . mulexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    mulexpr     go to state 71
    factor      go to state 30
    constant    go to state 31


State 52

   47 addexpr: addexpr OP_SUB . mulexpr

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 35
    mulexpr     go to state 72
    factor      go to state 30
    constant    go to state 31


State 53

   49 mulexpr: mulexpr OP_MUL . factor

    INT  shift, and go to state 16
    ID   shift, and go to state 13
    LP   shift, and go to state 18

    identifier  go to state 35
    factor      go to state 73
    constant    go to state 31


State 54

   50 mulexpr: mulexpr OP_DIV . factor

    INT  shift, and go to state 16
    ID   shift, and go to state 13
    LP   shift, and go to state 18

    identifier  go to state 35
    factor      go to state 74
    constant    go to state 31


State 55

   51 mulexpr: mulexpr OP_MOD . factor

    INT  shift, and go to state 16
    ID   shift, and go to state 13
    LP   shift, and go to state 18

    identifier  go to state 35
    factor      go to state 75
    constant    go to state 31


State 56

    6 function: declarator LP parameters RP . compoundstmt

    LBR  shift, and go to state 76

    compoundstmt  go to state 77


State 57

    7 parameters: parameters COMMA . declarator

    TYPE_INT  shift, and go to state 1

    declarator  go to state 78
    type        go to state 7


State 58

   56 factor: LP expr RP .

    $default  reduce using rule 56 (factor)


State 59

   26 expr: identifier OP_ASSIGN expr .

    $default  reduce using rule 26 (expr)


State 60

   28 logorexpr: logorexpr OP_LOGOR logandexpr .
   30 logandexpr: logandexpr . OP_LOGAND orexpr

    OP_LOGAND  shift, and go to state 41

    $default  reduce using rule 28 (logorexpr)


State 61

   30 logandexpr: logandexpr OP_LOGAND orexpr .
   32 orexpr: orexpr . OP_OR xorexpr

    OP_OR  shift, and go to state 42

    $default  reduce using rule 30 (logandexpr)


State 62

   32 orexpr: orexpr OP_OR xorexpr .
   34 xorexpr: xorexpr . OP_XOR andexpr

    OP_XOR  shift, and go to state 43

    $default  reduce using rule 32 (orexpr)


State 63

   34 xorexpr: xorexpr OP_XOR andexpr .
   36 andexpr: andexpr . OP_AND ecmprexpr

    OP_AND  shift, and go to state 44

    $default  reduce using rule 34 (xorexpr)


State 64

   36 andexpr: andexpr OP_AND ecmprexpr .
   38 ecmprexpr: ecmprexpr . OP_EQ cmprexpr
   39          | ecmprexpr . OP_NEQ cmprexpr

    OP_EQ   shift, and go to state 45
    OP_NEQ  shift, and go to state 46

    $default  reduce using rule 36 (andexpr)


State 65

   38 ecmprexpr: ecmprexpr OP_EQ cmprexpr .
   41 cmprexpr: cmprexpr . OP_GT addexpr
   42         | cmprexpr . OP_LT addexpr
   43         | cmprexpr . OP_GTE addexpr
   44         | cmprexpr . OP_LTE addexpr

    OP_GT   shift, and go to state 47
    OP_LT   shift, and go to state 48
    OP_GTE  shift, and go to state 49
    OP_LTE  shift, and go to state 50

    $default  reduce using rule 38 (ecmprexpr)


State 66

   39 ecmprexpr: ecmprexpr OP_NEQ cmprexpr .
   41 cmprexpr: cmprexpr . OP_GT addexpr
   42         | cmprexpr . OP_LT addexpr
   43         | cmprexpr . OP_GTE addexpr
   44         | cmprexpr . OP_LTE addexpr

    OP_GT   shift, and go to state 47
    OP_LT   shift, and go to state 48
    OP_GTE  shift, and go to state 49
    OP_LTE  shift, and go to state 50

    $default  reduce using rule 39 (ecmprexpr)


State 67

   41 cmprexpr: cmprexpr OP_GT addexpr .
   46 addexpr: addexpr . OP_ADD mulexpr
   47        | addexpr . OP_SUB mulexpr

    OP_ADD  shift, and go to state 51
    OP_SUB  shift, and go to state 52

    $default  reduce using rule 41 (cmprexpr)


State 68

   42 cmprexpr: cmprexpr OP_LT addexpr .
   46 addexpr: addexpr . OP_ADD mulexpr
   47        | addexpr . OP_SUB mulexpr

    OP_ADD  shift, and go to state 51
    OP_SUB  shift, and go to state 52

    $default  reduce using rule 42 (cmprexpr)


State 69

   43 cmprexpr: cmprexpr OP_GTE addexpr .
   46 addexpr: addexpr . OP_ADD mulexpr
   47        | addexpr . OP_SUB mulexpr

    OP_ADD  shift, and go to state 51
    OP_SUB  shift, and go to state 52

    $default  reduce using rule 43 (cmprexpr)


State 70

   44 cmprexpr: cmprexpr OP_LTE addexpr .
   46 addexpr: addexpr . OP_ADD mulexpr
   47        | addexpr . OP_SUB mulexpr

    OP_ADD  shift, and go to state 51
    OP_SUB  shift, and go to state 52

    $default  reduce using rule 44 (cmprexpr)


State 71

   46 addexpr: addexpr OP_ADD mulexpr .
   49 mulexpr: mulexpr . OP_MUL factor
   50        | mulexpr . OP_DIV factor
   51        | mulexpr . OP_MOD factor

    OP_MUL  shift, and go to state 53
    OP_DIV  shift, and go to state 54
    OP_MOD  shift, and go to state 55

    $default  reduce using rule 46 (addexpr)


State 72

   47 addexpr: addexpr OP_SUB mulexpr .
   49 mulexpr: mulexpr . OP_MUL factor
   50        | mulexpr . OP_DIV factor
   51        | mulexpr . OP_MOD factor

    OP_MUL  shift, and go to state 53
    OP_DIV  shift, and go to state 54
    OP_MOD  shift, and go to state 55

    $default  reduce using rule 47 (addexpr)


State 73

   49 mulexpr: mulexpr OP_MUL factor .

    $default  reduce using rule 49 (mulexpr)


State 74

   50 mulexpr: mulexpr OP_DIV factor .

    $default  reduce using rule 50 (mulexpr)


State 75

   51 mulexpr: mulexpr OP_MOD factor .

    $default  reduce using rule 51 (mulexpr)


State 76

   19 compoundstmt: LBR . items RBR

    $default  reduce using rule 21 (items)

    items  go to state 79


State 77

    6 function: declarator LP parameters RP compoundstmt .

    $default  reduce using rule 6 (function)


State 78

    7 parameters: parameters COMMA declarator .

    $default  reduce using rule 7 (parameters)


State 79

   19 compoundstmt: LBR items . RBR
   20 items: items . item

    INT       shift, and go to state 16
    ID        shift, and go to state 13
    TYPE_INT  shift, and go to state 1
    OP_SUB    shift, and go to state 17
    LP        shift, and go to state 18
    LBR       shift, and go to state 76
    RBR       shift, and go to state 80
    SEM       shift, and go to state 81
    IF        shift, and go to state 82
    WHILE     shift, and go to state 83
    FOR       shift, and go to state 84

    declaration   go to state 85
    declarator    go to state 86
    type          go to state 7
    identifier    go to state 19
    statement     go to state 87
    compoundstmt  go to state 88
    item          go to state 89
    exprstmt      go to state 90
    expr          go to state 91
    logorexpr     go to state 21
    logandexpr    go to state 22
    orexpr        go to state 23
    xorexpr       go to state 24
    andexpr       go to state 25
    ecmprexpr     go to state 26
    cmprexpr      go to state 27
    addexpr       go to state 28
    mulexpr       go to state 29
    factor        go to state 30
    constant      go to state 31
    ctrlstmt      go to state 92


State 80

   19 compoundstmt: LBR items RBR .

    $default  reduce using rule 19 (compoundstmt)


State 81

   25 exprstmt: SEM .

    $default  reduce using rule 25 (exprstmt)


State 82

   58 ctrlstmt: IF . LP expr RP statement
   59         | IF . LP expr RP statement ELSE statement

    LP  shift, and go to state 93


State 83

   60 ctrlstmt: WHILE . LP expr RP statement

    LP  shift, and go to state 94


State 84

   61 ctrlstmt: FOR . LP initstmt exprstmt expr RP statement
   62         | FOR . LP initstmt exprstmt RP statement

    LP  shift, and go to state 95


State 85

   22 item: declaration .

    $default  reduce using rule 22 (item)


State 86

   11 declaration: declarator . SEM
   12            | declarator . OP_ASSIGN expr SEM

    OP_ASSIGN  shift, and go to state 10
    SEM        shift, and go to state 12


State 87

   23 item: statement .

    $default  reduce using rule 23 (item)


State 88

   16 statement: compoundstmt .

    $default  reduce using rule 16 (statement)


State 89

   20 items: items item .

    $default  reduce using rule 20 (items)


State 90

   17 statement: exprstmt .

    $default  reduce using rule 17 (statement)


State 91

   24 exprstmt: expr . SEM

    SEM  shift, and go to state 96


State 92

   18 statement: ctrlstmt .

    $default  reduce using rule 18 (statement)


State 93

   58 ctrlstmt: IF LP . expr RP statement
   59         | IF LP . expr RP statement ELSE statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 19
    expr        go to state 97
    logorexpr   go to state 21
    logandexpr  go to state 22
    orexpr      go to state 23
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 94

   60 ctrlstmt: WHILE LP . expr RP statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18

    identifier  go to state 19
    expr        go to state 98
    logorexpr   go to state 21
    logandexpr  go to state 22
    orexpr      go to state 23
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 95

   61 ctrlstmt: FOR LP . initstmt exprstmt expr RP statement
   62         | FOR LP . initstmt exprstmt RP statement

    INT       shift, and go to state 16
    ID        shift, and go to state 13
    TYPE_INT  shift, and go to state 1
    OP_SUB    shift, and go to state 17
    LP        shift, and go to state 18
    SEM       shift, and go to state 81

    declaration  go to state 99
    declarator   go to state 86
    type         go to state 7
    identifier   go to state 19
    exprstmt     go to state 100
    expr         go to state 91
    logorexpr    go to state 21
    logandexpr   go to state 22
    orexpr       go to state 23
    xorexpr      go to state 24
    andexpr      go to state 25
    ecmprexpr    go to state 26
    cmprexpr     go to state 27
    addexpr      go to state 28
    mulexpr      go to state 29
    factor       go to state 30
    constant     go to state 31
    initstmt     go to state 101


State 96

   24 exprstmt: expr SEM .

    $default  reduce using rule 24 (exprstmt)


State 97

   58 ctrlstmt: IF LP expr . RP statement
   59         | IF LP expr . RP statement ELSE statement

    RP  shift, and go to state 102


State 98

   60 ctrlstmt: WHILE LP expr . RP statement

    RP  shift, and go to state 103


State 99

   64 initstmt: declaration .

    $default  reduce using rule 64 (initstmt)


State 100

   63 initstmt: exprstmt .

    $default  reduce using rule 63 (initstmt)


State 101

   61 ctrlstmt: FOR LP initstmt . exprstmt expr RP statement
   62         | FOR LP initstmt . exprstmt RP statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18
    SEM     shift, and go to state 81

    identifier  go to state 19
    exprstmt    go to state 104
    expr        go to state 91
    logorexpr   go to state 21
    logandexpr  go to state 22
    orexpr      go to state 23
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 102

   58 ctrlstmt: IF LP expr RP . statement
   59         | IF LP expr RP . statement ELSE statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18
    LBR     shift, and go to state 76
    SEM     shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    FOR     shift, and go to state 84

    identifier    go to state 19
    statement     go to state 105
    compoundstmt  go to state 88
    exprstmt      go to state 90
    expr          go to state 91
    logorexpr     go to state 21
    logandexpr    go to state 22
    orexpr        go to state 23
    xorexpr       go to state 24
    andexpr       go to state 25
    ecmprexpr     go to state 26
    cmprexpr      go to state 27
    addexpr       go to state 28
    mulexpr       go to state 29
    factor        go to state 30
    constant      go to state 31
    ctrlstmt      go to state 92


State 103

   60 ctrlstmt: WHILE LP expr RP . statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18
    LBR     shift, and go to state 76
    SEM     shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    FOR     shift, and go to state 84

    identifier    go to state 19
    statement     go to state 106
    compoundstmt  go to state 88
    exprstmt      go to state 90
    expr          go to state 91
    logorexpr     go to state 21
    logandexpr    go to state 22
    orexpr        go to state 23
    xorexpr       go to state 24
    andexpr       go to state 25
    ecmprexpr     go to state 26
    cmprexpr      go to state 27
    addexpr       go to state 28
    mulexpr       go to state 29
    factor        go to state 30
    constant      go to state 31
    ctrlstmt      go to state 92


State 104

   61 ctrlstmt: FOR LP initstmt exprstmt . expr RP statement
   62         | FOR LP initstmt exprstmt . RP statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18
    RP      shift, and go to state 107

    identifier  go to state 19
    expr        go to state 108
    logorexpr   go to state 21
    logandexpr  go to state 22
    orexpr      go to state 23
    xorexpr     go to state 24
    andexpr     go to state 25
    ecmprexpr   go to state 26
    cmprexpr    go to state 27
    addexpr     go to state 28
    mulexpr     go to state 29
    factor      go to state 30
    constant    go to state 31


State 105

   58 ctrlstmt: IF LP expr RP statement .
   59         | IF LP expr RP statement . ELSE statement

    ELSE  shift, and go to state 109

    $default  reduce using rule 58 (ctrlstmt)


State 106

   60 ctrlstmt: WHILE LP expr RP statement .

    $default  reduce using rule 60 (ctrlstmt)


State 107

   62 ctrlstmt: FOR LP initstmt exprstmt RP . statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18
    LBR     shift, and go to state 76
    SEM     shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    FOR     shift, and go to state 84

    identifier    go to state 19
    statement     go to state 110
    compoundstmt  go to state 88
    exprstmt      go to state 90
    expr          go to state 91
    logorexpr     go to state 21
    logandexpr    go to state 22
    orexpr        go to state 23
    xorexpr       go to state 24
    andexpr       go to state 25
    ecmprexpr     go to state 26
    cmprexpr      go to state 27
    addexpr       go to state 28
    mulexpr       go to state 29
    factor        go to state 30
    constant      go to state 31
    ctrlstmt      go to state 92


State 108

   61 ctrlstmt: FOR LP initstmt exprstmt expr . RP statement

    RP  shift, and go to state 111


State 109

   59 ctrlstmt: IF LP expr RP statement ELSE . statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18
    LBR     shift, and go to state 76
    SEM     shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    FOR     shift, and go to state 84

    identifier    go to state 19
    statement     go to state 112
    compoundstmt  go to state 88
    exprstmt      go to state 90
    expr          go to state 91
    logorexpr     go to state 21
    logandexpr    go to state 22
    orexpr        go to state 23
    xorexpr       go to state 24
    andexpr       go to state 25
    ecmprexpr     go to state 26
    cmprexpr      go to state 27
    addexpr       go to state 28
    mulexpr       go to state 29
    factor        go to state 30
    constant      go to state 31
    ctrlstmt      go to state 92


State 110

   62 ctrlstmt: FOR LP initstmt exprstmt RP statement .

    $default  reduce using rule 62 (ctrlstmt)


State 111

   61 ctrlstmt: FOR LP initstmt exprstmt expr RP . statement

    INT     shift, and go to state 16
    ID      shift, and go to state 13
    OP_SUB  shift, and go to state 17
    LP      shift, and go to state 18
    LBR     shift, and go to state 76
    SEM     shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    FOR     shift, and go to state 84

    identifier    go to state 19
    statement     go to state 113
    compoundstmt  go to state 88
    exprstmt      go to state 90
    expr          go to state 91
    logorexpr     go to state 21
    logandexpr    go to state 22
    orexpr        go to state 23
    xorexpr       go to state 24
    andexpr       go to state 25
    ecmprexpr     go to state 26
    cmprexpr      go to state 27
    addexpr       go to state 28
    mulexpr       go to state 29
    factor        go to state 30
    constant      go to state 31
    ctrlstmt      go to state 92


State 112

   59 ctrlstmt: IF LP expr RP statement ELSE statement .

    $default  reduce using rule 59 (ctrlstmt)


State 113

   61 ctrlstmt: FOR LP initstmt exprstmt expr RP statement .

    $default  reduce using rule 61 (ctrlstmt)
