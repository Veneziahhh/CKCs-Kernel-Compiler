Terminals unused in grammar

    ID
    EQ


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: statement $@1 program
    3        | %empty

    4 statement: exp SEM
    5          | SEM

    6 exp: exp ADD term
    7    | exp SUB term
    8    | SUB term
    9    | term

   10 term: term MUL factor
   11     | term DIV factor
   12     | term MOD factor
   13     | factor

   14 factor: INT
   15       | LP exp RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <intNum> (258) 14
    ID <str> (259)
    ADD (260) 6
    SUB (261) 7 8
    MUL (262) 10
    DIV (263) 11
    MOD (264) 12
    EQ (265)
    LP (266) 15
    RP (267) 15
    SEM (268) 4 5


Nonterminals, with rules where they appear

    $accept (14)
        on left: 0
    program (15)
        on left: 2 3
        on right: 0 2
    $@1 (16)
        on left: 1
        on right: 2
    statement <node> (17)
        on left: 4 5
        on right: 2
    exp <node> (18)
        on left: 6 7 8 9
        on right: 4 6 7 15
    term <node> (19)
        on left: 10 11 12 13
        on right: 6 7 8 9 10 11 12
    factor <node> (20)
        on left: 14 15
        on right: 10 11 12 13


State 0

    0 $accept: . program $end

    INT  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    SEM  shift, and go to state 4

    $default  reduce using rule 3 (program)

    program    go to state 5
    statement  go to state 6
    exp        go to state 7
    term       go to state 8
    factor     go to state 9


State 1

   14 factor: INT .

    $default  reduce using rule 14 (factor)


State 2

    8 exp: SUB . term

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    term    go to state 10
    factor  go to state 9


State 3

   15 factor: LP . exp RP

    INT  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3

    exp     go to state 11
    term    go to state 8
    factor  go to state 9


State 4

    5 statement: SEM .

    $default  reduce using rule 5 (statement)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    2 program: statement . $@1 program

    $default  reduce using rule 1 ($@1)

    $@1  go to state 13


State 7

    4 statement: exp . SEM
    6 exp: exp . ADD term
    7    | exp . SUB term

    ADD  shift, and go to state 14
    SUB  shift, and go to state 15
    SEM  shift, and go to state 16


State 8

    9 exp: term .
   10 term: term . MUL factor
   11     | term . DIV factor
   12     | term . MOD factor

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18
    MOD  shift, and go to state 19

    $default  reduce using rule 9 (exp)


State 9

   13 term: factor .

    $default  reduce using rule 13 (term)


State 10

    8 exp: SUB term .
   10 term: term . MUL factor
   11     | term . DIV factor
   12     | term . MOD factor

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18
    MOD  shift, and go to state 19

    $default  reduce using rule 8 (exp)


State 11

    6 exp: exp . ADD term
    7    | exp . SUB term
   15 factor: LP exp . RP

    ADD  shift, and go to state 14
    SUB  shift, and go to state 15
    RP   shift, and go to state 20


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 program: statement $@1 . program

    INT  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    SEM  shift, and go to state 4

    $default  reduce using rule 3 (program)

    program    go to state 21
    statement  go to state 6
    exp        go to state 7
    term       go to state 8
    factor     go to state 9


State 14

    6 exp: exp ADD . term

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    term    go to state 22
    factor  go to state 9


State 15

    7 exp: exp SUB . term

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    term    go to state 23
    factor  go to state 9


State 16

    4 statement: exp SEM .

    $default  reduce using rule 4 (statement)


State 17

   10 term: term MUL . factor

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    factor  go to state 24


State 18

   11 term: term DIV . factor

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    factor  go to state 25


State 19

   12 term: term MOD . factor

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    factor  go to state 26


State 20

   15 factor: LP exp RP .

    $default  reduce using rule 15 (factor)


State 21

    2 program: statement $@1 program .

    $default  reduce using rule 2 (program)


State 22

    6 exp: exp ADD term .
   10 term: term . MUL factor
   11     | term . DIV factor
   12     | term . MOD factor

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18
    MOD  shift, and go to state 19

    $default  reduce using rule 6 (exp)


State 23

    7 exp: exp SUB term .
   10 term: term . MUL factor
   11     | term . DIV factor
   12     | term . MOD factor

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18
    MOD  shift, and go to state 19

    $default  reduce using rule 7 (exp)


State 24

   10 term: term MUL factor .

    $default  reduce using rule 10 (term)


State 25

   11 term: term DIV factor .

    $default  reduce using rule 11 (term)


State 26

   12 term: term MOD factor .

    $default  reduce using rule 12 (term)
