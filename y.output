Terminals unused in grammar

    COMMA


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: statement $@1 program
    3        | %empty

    4 statement: type idlist SEM
    5          | exp SEM
    6          | SEM

    7 idlist: identifier

    8 exp: identifier EQ exp
    9    | arithexp

   10 arithexp: arithexp ADD term
   11         | arithexp SUB term
   12         | SUB term
   13         | term

   14 term: term MUL factor
   15     | term DIV factor
   16     | term MOD factor
   17     | factor

   18 factor: identifier
   19       | integer
   20       | LP exp RP

   21 type: TYPE_INT

   22 identifier: ID

   23 integer: INT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <intNum> (258) 23
    ID <str> (259) 22
    ADD (260) 10
    SUB (261) 11 12
    MUL (262) 14
    DIV (263) 15
    MOD (264) 16
    EQ (265) 8
    LP (266) 20
    RP (267) 20
    SEM (268) 4 5 6
    COMMA (269)
    TYPE_INT (270) 21


Nonterminals, with rules where they appear

    $accept (16)
        on left: 0
    program (17)
        on left: 2 3
        on right: 0 2
    $@1 (18)
        on left: 1
        on right: 2
    statement <node> (19)
        on left: 4 5 6
        on right: 2
    idlist <node> (20)
        on left: 7
        on right: 4
    exp <node> (21)
        on left: 8 9
        on right: 5 8 20
    arithexp <node> (22)
        on left: 10 11 12 13
        on right: 9 10 11
    term <node> (23)
        on left: 14 15 16 17
        on right: 10 11 12 13 14 15 16
    factor <node> (24)
        on left: 18 19 20
        on right: 14 15 16 17
    type <node> (25)
        on left: 21
        on right: 4
    identifier <node> (26)
        on left: 22
        on right: 7 8 18
    integer <node> (27)
        on left: 23
        on right: 19


State 0

    0 $accept: . program $end

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    SUB       shift, and go to state 3
    LP        shift, and go to state 4
    SEM       shift, and go to state 5
    TYPE_INT  shift, and go to state 6

    $default  reduce using rule 3 (program)

    program     go to state 7
    statement   go to state 8
    exp         go to state 9
    arithexp    go to state 10
    term        go to state 11
    factor      go to state 12
    type        go to state 13
    identifier  go to state 14
    integer     go to state 15


State 1

   23 integer: INT .

    $default  reduce using rule 23 (integer)


State 2

   22 identifier: ID .

    $default  reduce using rule 22 (identifier)


State 3

   12 arithexp: SUB . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 4

    term        go to state 16
    factor      go to state 12
    identifier  go to state 17
    integer     go to state 15


State 4

   20 factor: LP . exp RP

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 3
    LP   shift, and go to state 4

    exp         go to state 18
    arithexp    go to state 10
    term        go to state 11
    factor      go to state 12
    identifier  go to state 14
    integer     go to state 15


State 5

    6 statement: SEM .

    $default  reduce using rule 6 (statement)


State 6

   21 type: TYPE_INT .

    $default  reduce using rule 21 (type)


State 7

    0 $accept: program . $end

    $end  shift, and go to state 19


State 8

    2 program: statement . $@1 program

    $default  reduce using rule 1 ($@1)

    $@1  go to state 20


State 9

    5 statement: exp . SEM

    SEM  shift, and go to state 21


State 10

    9 exp: arithexp .
   10 arithexp: arithexp . ADD term
   11         | arithexp . SUB term

    ADD  shift, and go to state 22
    SUB  shift, and go to state 23

    $default  reduce using rule 9 (exp)


State 11

   13 arithexp: term .
   14 term: term . MUL factor
   15     | term . DIV factor
   16     | term . MOD factor

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    $default  reduce using rule 13 (arithexp)


State 12

   17 term: factor .

    $default  reduce using rule 17 (term)


State 13

    4 statement: type . idlist SEM

    ID  shift, and go to state 2

    idlist      go to state 27
    identifier  go to state 28


State 14

    8 exp: identifier . EQ exp
   18 factor: identifier .

    EQ  shift, and go to state 29

    $default  reduce using rule 18 (factor)


State 15

   19 factor: integer .

    $default  reduce using rule 19 (factor)


State 16

   12 arithexp: SUB term .
   14 term: term . MUL factor
   15     | term . DIV factor
   16     | term . MOD factor

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    $default  reduce using rule 12 (arithexp)


State 17

   18 factor: identifier .

    $default  reduce using rule 18 (factor)


State 18

   20 factor: LP exp . RP

    RP  shift, and go to state 30


State 19

    0 $accept: program $end .

    $default  accept


State 20

    2 program: statement $@1 . program

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    SUB       shift, and go to state 3
    LP        shift, and go to state 4
    SEM       shift, and go to state 5
    TYPE_INT  shift, and go to state 6

    $default  reduce using rule 3 (program)

    program     go to state 31
    statement   go to state 8
    exp         go to state 9
    arithexp    go to state 10
    term        go to state 11
    factor      go to state 12
    type        go to state 13
    identifier  go to state 14
    integer     go to state 15


State 21

    5 statement: exp SEM .

    $default  reduce using rule 5 (statement)


State 22

   10 arithexp: arithexp ADD . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 4

    term        go to state 32
    factor      go to state 12
    identifier  go to state 17
    integer     go to state 15


State 23

   11 arithexp: arithexp SUB . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 4

    term        go to state 33
    factor      go to state 12
    identifier  go to state 17
    integer     go to state 15


State 24

   14 term: term MUL . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 4

    factor      go to state 34
    identifier  go to state 17
    integer     go to state 15


State 25

   15 term: term DIV . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 4

    factor      go to state 35
    identifier  go to state 17
    integer     go to state 15


State 26

   16 term: term MOD . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 4

    factor      go to state 36
    identifier  go to state 17
    integer     go to state 15


State 27

    4 statement: type idlist . SEM

    SEM  shift, and go to state 37


State 28

    7 idlist: identifier .

    $default  reduce using rule 7 (idlist)


State 29

    8 exp: identifier EQ . exp

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 3
    LP   shift, and go to state 4

    exp         go to state 38
    arithexp    go to state 10
    term        go to state 11
    factor      go to state 12
    identifier  go to state 14
    integer     go to state 15


State 30

   20 factor: LP exp RP .

    $default  reduce using rule 20 (factor)


State 31

    2 program: statement $@1 program .

    $default  reduce using rule 2 (program)


State 32

   10 arithexp: arithexp ADD term .
   14 term: term . MUL factor
   15     | term . DIV factor
   16     | term . MOD factor

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    $default  reduce using rule 10 (arithexp)


State 33

   11 arithexp: arithexp SUB term .
   14 term: term . MUL factor
   15     | term . DIV factor
   16     | term . MOD factor

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 26

    $default  reduce using rule 11 (arithexp)


State 34

   14 term: term MUL factor .

    $default  reduce using rule 14 (term)


State 35

   15 term: term DIV factor .

    $default  reduce using rule 15 (term)


State 36

   16 term: term MOD factor .

    $default  reduce using rule 16 (term)


State 37

    4 statement: type idlist SEM .

    $default  reduce using rule 4 (statement)


State 38

    8 exp: identifier EQ exp .

    $default  reduce using rule 8 (exp)
