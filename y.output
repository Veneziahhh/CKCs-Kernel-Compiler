Terminals unused in grammar

    COMMA


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: declaration $@1 program
    3        | %empty

    4 declaration: type idlist SEM
    5            | statement

    6 type: TYPE_INT

    7 idlist: identifier

    8 statement: compoundstmt
    9          | exprstmt
   10          | ctrlstmt

   11 compoundstmt: LBR declarations RBR

   12 declarations: declarations declaration
   13             | declaration

   14 exprstmt: expr SEM
   15         | SEM

   16 expr: variable OP_ASSIGN expr
   17     | logorexpr

   18 logorexpr: logorexpr OP_LOGOR logandexpr
   19          | logandexpr

   20 logandexpr: logandexpr OP_LOGAND orexpr
   21           | orexpr

   22 orexpr: orexpr OP_OR xorexpr
   23       | xorexpr

   24 xorexpr: xorexpr OP_XOR andexpr
   25        | andexpr

   26 andexpr: andexpr OP_AND ecmprexpr
   27        | ecmprexpr

   28 ecmprexpr: ecmprexpr OP_EQ cmprexpr
   29          | ecmprexpr OP_NEQ cmprexpr
   30          | cmprexpr

   31 cmprexpr: cmprexpr OP_GT arithexpr
   32         | cmprexpr OP_LT arithexpr
   33         | cmprexpr OP_GTE arithexpr
   34         | cmprexpr OP_LTE arithexpr
   35         | arithexpr

   36 arithexpr: arithexpr OP_ADD term
   37          | arithexpr OP_SUB term
   38          | OP_SUB term
   39          | term

   40 term: term OP_MUL factor
   41     | term OP_DIV factor
   42     | term OP_MOD factor
   43     | factor

   44 factor: identifier
   45       | integer
   46       | LP expr RP

   47 variable: identifier

   48 identifier: ID

   49 integer: INT

   50 ctrlstmt: IF LP expr RP statement
   51         | IF LP expr RP statement ELSE statement
   52         | WHILE LP expr RP statement
   53         | FOR LP exprstmt exprstmt expr RP statement
   54         | FOR LP exprstmt exprstmt RP statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <intNum> (258) 49
    ID <str> (259) 48
    TYPE_INT (260) 6
    OP_ADD (261) 36
    OP_SUB (262) 37 38
    OP_MUL (263) 40
    OP_DIV (264) 41
    OP_MOD (265) 42
    OP_GT (266) 31
    OP_LT (267) 32
    OP_GTE (268) 33
    OP_LTE (269) 34
    OP_EQ (270) 28
    OP_NEQ (271) 29
    OP_AND (272) 26
    OP_XOR (273) 24
    OP_OR (274) 22
    OP_LOGAND (275) 20
    OP_LOGOR (276) 18
    OP_ASSIGN (277) 16
    LP (278) 46 50 51 52 53 54
    RP (279) 46 50 51 52 53 54
    LBR (280) 11
    RBR (281) 11
    SEM (282) 4 14 15
    COMMA (283)
    IF (284) 50 51
    ELSE (285) 51
    WHILE (286) 52
    FOR (287) 53 54
    IFX (288)


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program (35)
        on left: 2 3
        on right: 0 2
    $@1 (36)
        on left: 1
        on right: 2
    declaration <node> (37)
        on left: 4 5
        on right: 2 12 13
    type <node> (38)
        on left: 6
        on right: 4
    idlist <node> (39)
        on left: 7
        on right: 4
    statement <node> (40)
        on left: 8 9 10
        on right: 5 50 51 52 53 54
    compoundstmt <node> (41)
        on left: 11
        on right: 8
    declarations <node> (42)
        on left: 12 13
        on right: 11 12
    exprstmt <node> (43)
        on left: 14 15
        on right: 9 53 54
    expr <node> (44)
        on left: 16 17
        on right: 14 16 46 50 51 52 53
    logorexpr <node> (45)
        on left: 18 19
        on right: 17 18
    logandexpr <node> (46)
        on left: 20 21
        on right: 18 19 20
    orexpr <node> (47)
        on left: 22 23
        on right: 20 21 22
    xorexpr <node> (48)
        on left: 24 25
        on right: 22 23 24
    andexpr <node> (49)
        on left: 26 27
        on right: 24 25 26
    ecmprexpr <node> (50)
        on left: 28 29 30
        on right: 26 27 28 29
    cmprexpr <node> (51)
        on left: 31 32 33 34 35
        on right: 28 29 30 31 32 33 34
    arithexpr <node> (52)
        on left: 36 37 38 39
        on right: 31 32 33 34 35 36 37
    term <node> (53)
        on left: 40 41 42 43
        on right: 36 37 38 39 40 41 42
    factor <node> (54)
        on left: 44 45 46
        on right: 40 41 42 43
    variable <node> (55)
        on left: 47
        on right: 16
    identifier <node> (56)
        on left: 48
        on right: 7 44 47
    integer <node> (57)
        on left: 49
        on right: 45
    ctrlstmt <node> (58)
        on left: 50 51 52 53 54
        on right: 10


State 0

    0 $accept: . program $end

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    LBR       shift, and go to state 6
    SEM       shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    FOR       shift, and go to state 10

    $default  reduce using rule 3 (program)

    program       go to state 11
    declaration   go to state 12
    type          go to state 13
    statement     go to state 14
    compoundstmt  go to state 15
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 1

   49 integer: INT .

    $default  reduce using rule 49 (integer)


State 2

   48 identifier: ID .

    $default  reduce using rule 48 (identifier)


State 3

    6 type: TYPE_INT .

    $default  reduce using rule 6 (type)


State 4

   38 arithexpr: OP_SUB . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 32
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 5

   46 factor: LP . expr RP

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    expr        go to state 34
    logorexpr   go to state 18
    logandexpr  go to state 19
    orexpr      go to state 20
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28
    identifier  go to state 29
    integer     go to state 30


State 6

   11 compoundstmt: LBR . declarations RBR

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    LBR       shift, and go to state 6
    SEM       shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    FOR       shift, and go to state 10

    declaration   go to state 35
    type          go to state 13
    statement     go to state 14
    compoundstmt  go to state 15
    declarations  go to state 36
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 7

   15 exprstmt: SEM .

    $default  reduce using rule 15 (exprstmt)


State 8

   50 ctrlstmt: IF . LP expr RP statement
   51         | IF . LP expr RP statement ELSE statement

    LP  shift, and go to state 37


State 9

   52 ctrlstmt: WHILE . LP expr RP statement

    LP  shift, and go to state 38


State 10

   53 ctrlstmt: FOR . LP exprstmt exprstmt expr RP statement
   54         | FOR . LP exprstmt exprstmt RP statement

    LP  shift, and go to state 39


State 11

    0 $accept: program . $end

    $end  shift, and go to state 40


State 12

    2 program: declaration . $@1 program

    $default  reduce using rule 1 ($@1)

    $@1  go to state 41


State 13

    4 declaration: type . idlist SEM

    ID  shift, and go to state 2

    idlist      go to state 42
    identifier  go to state 43


State 14

    5 declaration: statement .

    $default  reduce using rule 5 (declaration)


State 15

    8 statement: compoundstmt .

    $default  reduce using rule 8 (statement)


State 16

    9 statement: exprstmt .

    $default  reduce using rule 9 (statement)


State 17

   14 exprstmt: expr . SEM

    SEM  shift, and go to state 44


State 18

   17 expr: logorexpr .
   18 logorexpr: logorexpr . OP_LOGOR logandexpr

    OP_LOGOR  shift, and go to state 45

    $default  reduce using rule 17 (expr)


State 19

   19 logorexpr: logandexpr .
   20 logandexpr: logandexpr . OP_LOGAND orexpr

    OP_LOGAND  shift, and go to state 46

    $default  reduce using rule 19 (logorexpr)


State 20

   21 logandexpr: orexpr .
   22 orexpr: orexpr . OP_OR xorexpr

    OP_OR  shift, and go to state 47

    $default  reduce using rule 21 (logandexpr)


State 21

   23 orexpr: xorexpr .
   24 xorexpr: xorexpr . OP_XOR andexpr

    OP_XOR  shift, and go to state 48

    $default  reduce using rule 23 (orexpr)


State 22

   25 xorexpr: andexpr .
   26 andexpr: andexpr . OP_AND ecmprexpr

    OP_AND  shift, and go to state 49

    $default  reduce using rule 25 (xorexpr)


State 23

   27 andexpr: ecmprexpr .
   28 ecmprexpr: ecmprexpr . OP_EQ cmprexpr
   29          | ecmprexpr . OP_NEQ cmprexpr

    OP_EQ   shift, and go to state 50
    OP_NEQ  shift, and go to state 51

    $default  reduce using rule 27 (andexpr)


State 24

   30 ecmprexpr: cmprexpr .
   31 cmprexpr: cmprexpr . OP_GT arithexpr
   32         | cmprexpr . OP_LT arithexpr
   33         | cmprexpr . OP_GTE arithexpr
   34         | cmprexpr . OP_LTE arithexpr

    OP_GT   shift, and go to state 52
    OP_LT   shift, and go to state 53
    OP_GTE  shift, and go to state 54
    OP_LTE  shift, and go to state 55

    $default  reduce using rule 30 (ecmprexpr)


State 25

   35 cmprexpr: arithexpr .
   36 arithexpr: arithexpr . OP_ADD term
   37          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 56
    OP_SUB  shift, and go to state 57

    $default  reduce using rule 35 (cmprexpr)


State 26

   39 arithexpr: term .
   40 term: term . OP_MUL factor
   41     | term . OP_DIV factor
   42     | term . OP_MOD factor

    OP_MUL  shift, and go to state 58
    OP_DIV  shift, and go to state 59
    OP_MOD  shift, and go to state 60

    $default  reduce using rule 39 (arithexpr)


State 27

   43 term: factor .

    $default  reduce using rule 43 (term)


State 28

   16 expr: variable . OP_ASSIGN expr

    OP_ASSIGN  shift, and go to state 61


State 29

   44 factor: identifier .
   47 variable: identifier .

    OP_ASSIGN  reduce using rule 47 (variable)
    $default   reduce using rule 44 (factor)


State 30

   45 factor: integer .

    $default  reduce using rule 45 (factor)


State 31

   10 statement: ctrlstmt .

    $default  reduce using rule 10 (statement)


State 32

   38 arithexpr: OP_SUB term .
   40 term: term . OP_MUL factor
   41     | term . OP_DIV factor
   42     | term . OP_MOD factor

    OP_MUL  shift, and go to state 58
    OP_DIV  shift, and go to state 59
    OP_MOD  shift, and go to state 60

    $default  reduce using rule 38 (arithexpr)


State 33

   44 factor: identifier .

    $default  reduce using rule 44 (factor)


State 34

   46 factor: LP expr . RP

    RP  shift, and go to state 62


State 35

   13 declarations: declaration .

    $default  reduce using rule 13 (declarations)


State 36

   11 compoundstmt: LBR declarations . RBR
   12 declarations: declarations . declaration

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    LBR       shift, and go to state 6
    RBR       shift, and go to state 63
    SEM       shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    FOR       shift, and go to state 10

    declaration   go to state 64
    type          go to state 13
    statement     go to state 14
    compoundstmt  go to state 15
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 37

   50 ctrlstmt: IF LP . expr RP statement
   51         | IF LP . expr RP statement ELSE statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    expr        go to state 65
    logorexpr   go to state 18
    logandexpr  go to state 19
    orexpr      go to state 20
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28
    identifier  go to state 29
    integer     go to state 30


State 38

   52 ctrlstmt: WHILE LP . expr RP statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    expr        go to state 66
    logorexpr   go to state 18
    logandexpr  go to state 19
    orexpr      go to state 20
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28
    identifier  go to state 29
    integer     go to state 30


State 39

   53 ctrlstmt: FOR LP . exprstmt exprstmt expr RP statement
   54         | FOR LP . exprstmt exprstmt RP statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    SEM     shift, and go to state 7

    exprstmt    go to state 67
    expr        go to state 17
    logorexpr   go to state 18
    logandexpr  go to state 19
    orexpr      go to state 20
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28
    identifier  go to state 29
    integer     go to state 30


State 40

    0 $accept: program $end .

    $default  accept


State 41

    2 program: declaration $@1 . program

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    LBR       shift, and go to state 6
    SEM       shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    FOR       shift, and go to state 10

    $default  reduce using rule 3 (program)

    program       go to state 68
    declaration   go to state 12
    type          go to state 13
    statement     go to state 14
    compoundstmt  go to state 15
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 42

    4 declaration: type idlist . SEM

    SEM  shift, and go to state 69


State 43

    7 idlist: identifier .

    $default  reduce using rule 7 (idlist)


State 44

   14 exprstmt: expr SEM .

    $default  reduce using rule 14 (exprstmt)


State 45

   18 logorexpr: logorexpr OP_LOGOR . logandexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    logandexpr  go to state 70
    orexpr      go to state 20
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 46

   20 logandexpr: logandexpr OP_LOGAND . orexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    orexpr      go to state 71
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 47

   22 orexpr: orexpr OP_OR . xorexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    xorexpr     go to state 72
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 48

   24 xorexpr: xorexpr OP_XOR . andexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    andexpr     go to state 73
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 49

   26 andexpr: andexpr OP_AND . ecmprexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    ecmprexpr   go to state 74
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 50

   28 ecmprexpr: ecmprexpr OP_EQ . cmprexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    cmprexpr    go to state 75
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 51

   29 ecmprexpr: ecmprexpr OP_NEQ . cmprexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    cmprexpr    go to state 76
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 52

   31 cmprexpr: cmprexpr OP_GT . arithexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    arithexpr   go to state 77
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 53

   32 cmprexpr: cmprexpr OP_LT . arithexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    arithexpr   go to state 78
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 54

   33 cmprexpr: cmprexpr OP_GTE . arithexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    arithexpr   go to state 79
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 55

   34 cmprexpr: cmprexpr OP_LTE . arithexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    arithexpr   go to state 80
    term        go to state 26
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 56

   36 arithexpr: arithexpr OP_ADD . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 81
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 57

   37 arithexpr: arithexpr OP_SUB . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 82
    factor      go to state 27
    identifier  go to state 33
    integer     go to state 30


State 58

   40 term: term OP_MUL . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 83
    identifier  go to state 33
    integer     go to state 30


State 59

   41 term: term OP_DIV . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 84
    identifier  go to state 33
    integer     go to state 30


State 60

   42 term: term OP_MOD . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 85
    identifier  go to state 33
    integer     go to state 30


State 61

   16 expr: variable OP_ASSIGN . expr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    expr        go to state 86
    logorexpr   go to state 18
    logandexpr  go to state 19
    orexpr      go to state 20
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28
    identifier  go to state 29
    integer     go to state 30


State 62

   46 factor: LP expr RP .

    $default  reduce using rule 46 (factor)


State 63

   11 compoundstmt: LBR declarations RBR .

    $default  reduce using rule 11 (compoundstmt)


State 64

   12 declarations: declarations declaration .

    $default  reduce using rule 12 (declarations)


State 65

   50 ctrlstmt: IF LP expr . RP statement
   51         | IF LP expr . RP statement ELSE statement

    RP  shift, and go to state 87


State 66

   52 ctrlstmt: WHILE LP expr . RP statement

    RP  shift, and go to state 88


State 67

   53 ctrlstmt: FOR LP exprstmt . exprstmt expr RP statement
   54         | FOR LP exprstmt . exprstmt RP statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    SEM     shift, and go to state 7

    exprstmt    go to state 89
    expr        go to state 17
    logorexpr   go to state 18
    logandexpr  go to state 19
    orexpr      go to state 20
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28
    identifier  go to state 29
    integer     go to state 30


State 68

    2 program: declaration $@1 program .

    $default  reduce using rule 2 (program)


State 69

    4 declaration: type idlist SEM .

    $default  reduce using rule 4 (declaration)


State 70

   18 logorexpr: logorexpr OP_LOGOR logandexpr .
   20 logandexpr: logandexpr . OP_LOGAND orexpr

    OP_LOGAND  shift, and go to state 46

    $default  reduce using rule 18 (logorexpr)


State 71

   20 logandexpr: logandexpr OP_LOGAND orexpr .
   22 orexpr: orexpr . OP_OR xorexpr

    OP_OR  shift, and go to state 47

    $default  reduce using rule 20 (logandexpr)


State 72

   22 orexpr: orexpr OP_OR xorexpr .
   24 xorexpr: xorexpr . OP_XOR andexpr

    OP_XOR  shift, and go to state 48

    $default  reduce using rule 22 (orexpr)


State 73

   24 xorexpr: xorexpr OP_XOR andexpr .
   26 andexpr: andexpr . OP_AND ecmprexpr

    OP_AND  shift, and go to state 49

    $default  reduce using rule 24 (xorexpr)


State 74

   26 andexpr: andexpr OP_AND ecmprexpr .
   28 ecmprexpr: ecmprexpr . OP_EQ cmprexpr
   29          | ecmprexpr . OP_NEQ cmprexpr

    OP_EQ   shift, and go to state 50
    OP_NEQ  shift, and go to state 51

    $default  reduce using rule 26 (andexpr)


State 75

   28 ecmprexpr: ecmprexpr OP_EQ cmprexpr .
   31 cmprexpr: cmprexpr . OP_GT arithexpr
   32         | cmprexpr . OP_LT arithexpr
   33         | cmprexpr . OP_GTE arithexpr
   34         | cmprexpr . OP_LTE arithexpr

    OP_GT   shift, and go to state 52
    OP_LT   shift, and go to state 53
    OP_GTE  shift, and go to state 54
    OP_LTE  shift, and go to state 55

    $default  reduce using rule 28 (ecmprexpr)


State 76

   29 ecmprexpr: ecmprexpr OP_NEQ cmprexpr .
   31 cmprexpr: cmprexpr . OP_GT arithexpr
   32         | cmprexpr . OP_LT arithexpr
   33         | cmprexpr . OP_GTE arithexpr
   34         | cmprexpr . OP_LTE arithexpr

    OP_GT   shift, and go to state 52
    OP_LT   shift, and go to state 53
    OP_GTE  shift, and go to state 54
    OP_LTE  shift, and go to state 55

    $default  reduce using rule 29 (ecmprexpr)


State 77

   31 cmprexpr: cmprexpr OP_GT arithexpr .
   36 arithexpr: arithexpr . OP_ADD term
   37          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 56
    OP_SUB  shift, and go to state 57

    $default  reduce using rule 31 (cmprexpr)


State 78

   32 cmprexpr: cmprexpr OP_LT arithexpr .
   36 arithexpr: arithexpr . OP_ADD term
   37          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 56
    OP_SUB  shift, and go to state 57

    $default  reduce using rule 32 (cmprexpr)


State 79

   33 cmprexpr: cmprexpr OP_GTE arithexpr .
   36 arithexpr: arithexpr . OP_ADD term
   37          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 56
    OP_SUB  shift, and go to state 57

    $default  reduce using rule 33 (cmprexpr)


State 80

   34 cmprexpr: cmprexpr OP_LTE arithexpr .
   36 arithexpr: arithexpr . OP_ADD term
   37          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 56
    OP_SUB  shift, and go to state 57

    $default  reduce using rule 34 (cmprexpr)


State 81

   36 arithexpr: arithexpr OP_ADD term .
   40 term: term . OP_MUL factor
   41     | term . OP_DIV factor
   42     | term . OP_MOD factor

    OP_MUL  shift, and go to state 58
    OP_DIV  shift, and go to state 59
    OP_MOD  shift, and go to state 60

    $default  reduce using rule 36 (arithexpr)


State 82

   37 arithexpr: arithexpr OP_SUB term .
   40 term: term . OP_MUL factor
   41     | term . OP_DIV factor
   42     | term . OP_MOD factor

    OP_MUL  shift, and go to state 58
    OP_DIV  shift, and go to state 59
    OP_MOD  shift, and go to state 60

    $default  reduce using rule 37 (arithexpr)


State 83

   40 term: term OP_MUL factor .

    $default  reduce using rule 40 (term)


State 84

   41 term: term OP_DIV factor .

    $default  reduce using rule 41 (term)


State 85

   42 term: term OP_MOD factor .

    $default  reduce using rule 42 (term)


State 86

   16 expr: variable OP_ASSIGN expr .

    $default  reduce using rule 16 (expr)


State 87

   50 ctrlstmt: IF LP expr RP . statement
   51         | IF LP expr RP . statement ELSE statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 90
    compoundstmt  go to state 15
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 88

   52 ctrlstmt: WHILE LP expr RP . statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 91
    compoundstmt  go to state 15
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 89

   53 ctrlstmt: FOR LP exprstmt exprstmt . expr RP statement
   54         | FOR LP exprstmt exprstmt . RP statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    RP      shift, and go to state 92

    expr        go to state 93
    logorexpr   go to state 18
    logandexpr  go to state 19
    orexpr      go to state 20
    xorexpr     go to state 21
    andexpr     go to state 22
    ecmprexpr   go to state 23
    cmprexpr    go to state 24
    arithexpr   go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28
    identifier  go to state 29
    integer     go to state 30


State 90

   50 ctrlstmt: IF LP expr RP statement .
   51         | IF LP expr RP statement . ELSE statement

    ELSE  shift, and go to state 94

    $default  reduce using rule 50 (ctrlstmt)


State 91

   52 ctrlstmt: WHILE LP expr RP statement .

    $default  reduce using rule 52 (ctrlstmt)


State 92

   54 ctrlstmt: FOR LP exprstmt exprstmt RP . statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 95
    compoundstmt  go to state 15
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 93

   53 ctrlstmt: FOR LP exprstmt exprstmt expr . RP statement

    RP  shift, and go to state 96


State 94

   51 ctrlstmt: IF LP expr RP statement ELSE . statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 97
    compoundstmt  go to state 15
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 95

   54 ctrlstmt: FOR LP exprstmt exprstmt RP statement .

    $default  reduce using rule 54 (ctrlstmt)


State 96

   53 ctrlstmt: FOR LP exprstmt exprstmt expr RP . statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 98
    compoundstmt  go to state 15
    exprstmt      go to state 16
    expr          go to state 17
    logorexpr     go to state 18
    logandexpr    go to state 19
    orexpr        go to state 20
    xorexpr       go to state 21
    andexpr       go to state 22
    ecmprexpr     go to state 23
    cmprexpr      go to state 24
    arithexpr     go to state 25
    term          go to state 26
    factor        go to state 27
    variable      go to state 28
    identifier    go to state 29
    integer       go to state 30
    ctrlstmt      go to state 31


State 97

   51 ctrlstmt: IF LP expr RP statement ELSE statement .

    $default  reduce using rule 51 (ctrlstmt)


State 98

   53 ctrlstmt: FOR LP exprstmt exprstmt expr RP statement .

    $default  reduce using rule 53 (ctrlstmt)
