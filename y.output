Terminals unused in grammar

    EQ


Grammar

    0 $accept: program $end

    1 program: statement program
    2        | %empty

    3 statement: exp SEM
    4          | SEM

    5 exp: exp ADD term
    6    | exp SUB term
    7    | SUB term
    8    | term

    9 term: term MUL factor
   10     | term DIV factor
   11     | factor

   12 factor: INT
   13       | LP exp RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <intNum> (258) 12
    ADD (259) 5
    SUB (260) 6 7
    MUL (261) 9
    DIV (262) 10
    EQ (263)
    LP (264) 13
    RP (265) 13
    SEM (266) 3 4


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    program (13)
        on left: 1 2
        on right: 0 1
    statement (14)
        on left: 3 4
        on right: 1
    exp <node> (15)
        on left: 5 6 7 8
        on right: 3 5 6 13
    term <node> (16)
        on left: 9 10 11
        on right: 5 6 7 8 9 10
    factor <node> (17)
        on left: 12 13
        on right: 9 10 11


State 0

    0 $accept: . program $end

    INT  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    SEM  shift, and go to state 4

    $default  reduce using rule 2 (program)

    program    go to state 5
    statement  go to state 6
    exp        go to state 7
    term       go to state 8
    factor     go to state 9


State 1

   12 factor: INT .

    $default  reduce using rule 12 (factor)


State 2

    7 exp: SUB . term

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    term    go to state 10
    factor  go to state 9


State 3

   13 factor: LP . exp RP

    INT  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3

    exp     go to state 11
    term    go to state 8
    factor  go to state 9


State 4

    4 statement: SEM .

    $default  reduce using rule 4 (statement)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    1 program: statement . program

    INT  shift, and go to state 1
    SUB  shift, and go to state 2
    LP   shift, and go to state 3
    SEM  shift, and go to state 4

    $default  reduce using rule 2 (program)

    program    go to state 13
    statement  go to state 6
    exp        go to state 7
    term       go to state 8
    factor     go to state 9


State 7

    3 statement: exp . SEM
    5 exp: exp . ADD term
    6    | exp . SUB term

    ADD  shift, and go to state 14
    SUB  shift, and go to state 15
    SEM  shift, and go to state 16


State 8

    8 exp: term .
    9 term: term . MUL factor
   10     | term . DIV factor

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18

    $default  reduce using rule 8 (exp)


State 9

   11 term: factor .

    $default  reduce using rule 11 (term)


State 10

    7 exp: SUB term .
    9 term: term . MUL factor
   10     | term . DIV factor

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18

    $default  reduce using rule 7 (exp)


State 11

    5 exp: exp . ADD term
    6    | exp . SUB term
   13 factor: LP exp . RP

    ADD  shift, and go to state 14
    SUB  shift, and go to state 15
    RP   shift, and go to state 19


State 12

    0 $accept: program $end .

    $default  accept


State 13

    1 program: statement program .

    $default  reduce using rule 1 (program)


State 14

    5 exp: exp ADD . term

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    term    go to state 20
    factor  go to state 9


State 15

    6 exp: exp SUB . term

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    term    go to state 21
    factor  go to state 9


State 16

    3 statement: exp SEM .

    $default  reduce using rule 3 (statement)


State 17

    9 term: term MUL . factor

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    factor  go to state 22


State 18

   10 term: term DIV . factor

    INT  shift, and go to state 1
    LP   shift, and go to state 3

    factor  go to state 23


State 19

   13 factor: LP exp RP .

    $default  reduce using rule 13 (factor)


State 20

    5 exp: exp ADD term .
    9 term: term . MUL factor
   10     | term . DIV factor

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18

    $default  reduce using rule 5 (exp)


State 21

    6 exp: exp SUB term .
    9 term: term . MUL factor
   10     | term . DIV factor

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18

    $default  reduce using rule 6 (exp)


State 22

    9 term: term MUL factor .

    $default  reduce using rule 9 (term)


State 23

   10 term: term DIV factor .

    $default  reduce using rule 10 (term)
