Terminals unused in grammar

    COMMA


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: item $@1 program
    3        | %empty

    4 declaration: type idlist SEM

    5 type: TYPE_INT

    6 idlist: identifier

    7 statement: compoundstmt
    8          | exprstmt
    9          | ctrlstmt

   10 compoundstmt: LBR items RBR

   11 items: items item
   12      | item

   13 item: declaration
   14     | statement

   15 exprstmt: expr SEM
   16         | SEM

   17 expr: variable OP_ASSIGN expr
   18     | logorexpr

   19 logorexpr: logorexpr OP_LOGOR logandexpr
   20          | logandexpr

   21 logandexpr: logandexpr OP_LOGAND orexpr
   22           | orexpr

   23 orexpr: orexpr OP_OR xorexpr
   24       | xorexpr

   25 xorexpr: xorexpr OP_XOR andexpr
   26        | andexpr

   27 andexpr: andexpr OP_AND ecmprexpr
   28        | ecmprexpr

   29 ecmprexpr: ecmprexpr OP_EQ cmprexpr
   30          | ecmprexpr OP_NEQ cmprexpr
   31          | cmprexpr

   32 cmprexpr: cmprexpr OP_GT arithexpr
   33         | cmprexpr OP_LT arithexpr
   34         | cmprexpr OP_GTE arithexpr
   35         | cmprexpr OP_LTE arithexpr
   36         | arithexpr

   37 arithexpr: arithexpr OP_ADD term
   38          | arithexpr OP_SUB term
   39          | OP_SUB term
   40          | term

   41 term: term OP_MUL factor
   42     | term OP_DIV factor
   43     | term OP_MOD factor
   44     | factor

   45 factor: identifier
   46       | integer
   47       | LP expr RP

   48 variable: identifier

   49 identifier: ID

   50 integer: INT

   51 ctrlstmt: IF LP expr RP statement
   52         | IF LP expr RP statement ELSE statement
   53         | WHILE LP expr RP statement
   54         | FOR LP initstmt exprstmt expr RP statement
   55         | FOR LP initstmt exprstmt RP statement

   56 initstmt: exprstmt
   57         | declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <intNum> (258) 50
    ID <str> (259) 49
    TYPE_INT (260) 5
    OP_ADD (261) 37
    OP_SUB (262) 38 39
    OP_MUL (263) 41
    OP_DIV (264) 42
    OP_MOD (265) 43
    OP_GT (266) 32
    OP_LT (267) 33
    OP_GTE (268) 34
    OP_LTE (269) 35
    OP_EQ (270) 29
    OP_NEQ (271) 30
    OP_AND (272) 27
    OP_XOR (273) 25
    OP_OR (274) 23
    OP_LOGAND (275) 21
    OP_LOGOR (276) 19
    OP_ASSIGN (277) 17
    LP (278) 47 51 52 53 54 55
    RP (279) 47 51 52 53 54 55
    LBR (280) 10
    RBR (281) 10
    SEM (282) 4 15 16
    COMMA (283)
    IF (284) 51 52
    ELSE (285) 52
    WHILE (286) 53
    FOR (287) 54 55
    IFX (288)


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program (35)
        on left: 2 3
        on right: 0 2
    $@1 (36)
        on left: 1
        on right: 2
    declaration <node> (37)
        on left: 4
        on right: 13 57
    type <node> (38)
        on left: 5
        on right: 4
    idlist <node> (39)
        on left: 6
        on right: 4
    statement <node> (40)
        on left: 7 8 9
        on right: 14 51 52 53 54 55
    compoundstmt <node> (41)
        on left: 10
        on right: 7
    items <node> (42)
        on left: 11 12
        on right: 10 11
    item <node> (43)
        on left: 13 14
        on right: 2 11 12
    exprstmt <node> (44)
        on left: 15 16
        on right: 8 54 55 56
    expr <node> (45)
        on left: 17 18
        on right: 15 17 47 51 52 53 54
    logorexpr <node> (46)
        on left: 19 20
        on right: 18 19
    logandexpr <node> (47)
        on left: 21 22
        on right: 19 20 21
    orexpr <node> (48)
        on left: 23 24
        on right: 21 22 23
    xorexpr <node> (49)
        on left: 25 26
        on right: 23 24 25
    andexpr <node> (50)
        on left: 27 28
        on right: 25 26 27
    ecmprexpr <node> (51)
        on left: 29 30 31
        on right: 27 28 29 30
    cmprexpr <node> (52)
        on left: 32 33 34 35 36
        on right: 29 30 31 32 33 34 35
    arithexpr <node> (53)
        on left: 37 38 39 40
        on right: 32 33 34 35 36 37 38
    term <node> (54)
        on left: 41 42 43 44
        on right: 37 38 39 40 41 42 43
    factor <node> (55)
        on left: 45 46 47
        on right: 41 42 43 44
    variable <node> (56)
        on left: 48
        on right: 17
    identifier <node> (57)
        on left: 49
        on right: 6 45 48
    integer <node> (58)
        on left: 50
        on right: 46
    ctrlstmt <node> (59)
        on left: 51 52 53 54 55
        on right: 9
    initstmt <node> (60)
        on left: 56 57
        on right: 54 55


State 0

    0 $accept: . program $end

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    LBR       shift, and go to state 6
    SEM       shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    FOR       shift, and go to state 10

    $default  reduce using rule 3 (program)

    program       go to state 11
    declaration   go to state 12
    type          go to state 13
    statement     go to state 14
    compoundstmt  go to state 15
    item          go to state 16
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 1

   50 integer: INT .

    $default  reduce using rule 50 (integer)


State 2

   49 identifier: ID .

    $default  reduce using rule 49 (identifier)


State 3

    5 type: TYPE_INT .

    $default  reduce using rule 5 (type)


State 4

   39 arithexpr: OP_SUB . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 33
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 5

   47 factor: LP . expr RP

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    expr        go to state 35
    logorexpr   go to state 19
    logandexpr  go to state 20
    orexpr      go to state 21
    xorexpr     go to state 22
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    variable    go to state 29
    identifier  go to state 30
    integer     go to state 31


State 6

   10 compoundstmt: LBR . items RBR

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    LBR       shift, and go to state 6
    SEM       shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    FOR       shift, and go to state 10

    declaration   go to state 12
    type          go to state 13
    statement     go to state 14
    compoundstmt  go to state 15
    items         go to state 36
    item          go to state 37
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 7

   16 exprstmt: SEM .

    $default  reduce using rule 16 (exprstmt)


State 8

   51 ctrlstmt: IF . LP expr RP statement
   52         | IF . LP expr RP statement ELSE statement

    LP  shift, and go to state 38


State 9

   53 ctrlstmt: WHILE . LP expr RP statement

    LP  shift, and go to state 39


State 10

   54 ctrlstmt: FOR . LP initstmt exprstmt expr RP statement
   55         | FOR . LP initstmt exprstmt RP statement

    LP  shift, and go to state 40


State 11

    0 $accept: program . $end

    $end  shift, and go to state 41


State 12

   13 item: declaration .

    $default  reduce using rule 13 (item)


State 13

    4 declaration: type . idlist SEM

    ID  shift, and go to state 2

    idlist      go to state 42
    identifier  go to state 43


State 14

   14 item: statement .

    $default  reduce using rule 14 (item)


State 15

    7 statement: compoundstmt .

    $default  reduce using rule 7 (statement)


State 16

    2 program: item . $@1 program

    $default  reduce using rule 1 ($@1)

    $@1  go to state 44


State 17

    8 statement: exprstmt .

    $default  reduce using rule 8 (statement)


State 18

   15 exprstmt: expr . SEM

    SEM  shift, and go to state 45


State 19

   18 expr: logorexpr .
   19 logorexpr: logorexpr . OP_LOGOR logandexpr

    OP_LOGOR  shift, and go to state 46

    $default  reduce using rule 18 (expr)


State 20

   20 logorexpr: logandexpr .
   21 logandexpr: logandexpr . OP_LOGAND orexpr

    OP_LOGAND  shift, and go to state 47

    $default  reduce using rule 20 (logorexpr)


State 21

   22 logandexpr: orexpr .
   23 orexpr: orexpr . OP_OR xorexpr

    OP_OR  shift, and go to state 48

    $default  reduce using rule 22 (logandexpr)


State 22

   24 orexpr: xorexpr .
   25 xorexpr: xorexpr . OP_XOR andexpr

    OP_XOR  shift, and go to state 49

    $default  reduce using rule 24 (orexpr)


State 23

   26 xorexpr: andexpr .
   27 andexpr: andexpr . OP_AND ecmprexpr

    OP_AND  shift, and go to state 50

    $default  reduce using rule 26 (xorexpr)


State 24

   28 andexpr: ecmprexpr .
   29 ecmprexpr: ecmprexpr . OP_EQ cmprexpr
   30          | ecmprexpr . OP_NEQ cmprexpr

    OP_EQ   shift, and go to state 51
    OP_NEQ  shift, and go to state 52

    $default  reduce using rule 28 (andexpr)


State 25

   31 ecmprexpr: cmprexpr .
   32 cmprexpr: cmprexpr . OP_GT arithexpr
   33         | cmprexpr . OP_LT arithexpr
   34         | cmprexpr . OP_GTE arithexpr
   35         | cmprexpr . OP_LTE arithexpr

    OP_GT   shift, and go to state 53
    OP_LT   shift, and go to state 54
    OP_GTE  shift, and go to state 55
    OP_LTE  shift, and go to state 56

    $default  reduce using rule 31 (ecmprexpr)


State 26

   36 cmprexpr: arithexpr .
   37 arithexpr: arithexpr . OP_ADD term
   38          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 57
    OP_SUB  shift, and go to state 58

    $default  reduce using rule 36 (cmprexpr)


State 27

   40 arithexpr: term .
   41 term: term . OP_MUL factor
   42     | term . OP_DIV factor
   43     | term . OP_MOD factor

    OP_MUL  shift, and go to state 59
    OP_DIV  shift, and go to state 60
    OP_MOD  shift, and go to state 61

    $default  reduce using rule 40 (arithexpr)


State 28

   44 term: factor .

    $default  reduce using rule 44 (term)


State 29

   17 expr: variable . OP_ASSIGN expr

    OP_ASSIGN  shift, and go to state 62


State 30

   45 factor: identifier .
   48 variable: identifier .

    OP_ASSIGN  reduce using rule 48 (variable)
    $default   reduce using rule 45 (factor)


State 31

   46 factor: integer .

    $default  reduce using rule 46 (factor)


State 32

    9 statement: ctrlstmt .

    $default  reduce using rule 9 (statement)


State 33

   39 arithexpr: OP_SUB term .
   41 term: term . OP_MUL factor
   42     | term . OP_DIV factor
   43     | term . OP_MOD factor

    OP_MUL  shift, and go to state 59
    OP_DIV  shift, and go to state 60
    OP_MOD  shift, and go to state 61

    $default  reduce using rule 39 (arithexpr)


State 34

   45 factor: identifier .

    $default  reduce using rule 45 (factor)


State 35

   47 factor: LP expr . RP

    RP  shift, and go to state 63


State 36

   10 compoundstmt: LBR items . RBR
   11 items: items . item

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    LBR       shift, and go to state 6
    RBR       shift, and go to state 64
    SEM       shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    FOR       shift, and go to state 10

    declaration   go to state 12
    type          go to state 13
    statement     go to state 14
    compoundstmt  go to state 15
    item          go to state 65
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 37

   12 items: item .

    $default  reduce using rule 12 (items)


State 38

   51 ctrlstmt: IF LP . expr RP statement
   52         | IF LP . expr RP statement ELSE statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    expr        go to state 66
    logorexpr   go to state 19
    logandexpr  go to state 20
    orexpr      go to state 21
    xorexpr     go to state 22
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    variable    go to state 29
    identifier  go to state 30
    integer     go to state 31


State 39

   53 ctrlstmt: WHILE LP . expr RP statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    expr        go to state 67
    logorexpr   go to state 19
    logandexpr  go to state 20
    orexpr      go to state 21
    xorexpr     go to state 22
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    variable    go to state 29
    identifier  go to state 30
    integer     go to state 31


State 40

   54 ctrlstmt: FOR LP . initstmt exprstmt expr RP statement
   55         | FOR LP . initstmt exprstmt RP statement

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    SEM       shift, and go to state 7

    declaration  go to state 68
    type         go to state 13
    exprstmt     go to state 69
    expr         go to state 18
    logorexpr    go to state 19
    logandexpr   go to state 20
    orexpr       go to state 21
    xorexpr      go to state 22
    andexpr      go to state 23
    ecmprexpr    go to state 24
    cmprexpr     go to state 25
    arithexpr    go to state 26
    term         go to state 27
    factor       go to state 28
    variable     go to state 29
    identifier   go to state 30
    integer      go to state 31
    initstmt     go to state 70


State 41

    0 $accept: program $end .

    $default  accept


State 42

    4 declaration: type idlist . SEM

    SEM  shift, and go to state 71


State 43

    6 idlist: identifier .

    $default  reduce using rule 6 (idlist)


State 44

    2 program: item $@1 . program

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    OP_SUB    shift, and go to state 4
    LP        shift, and go to state 5
    LBR       shift, and go to state 6
    SEM       shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    FOR       shift, and go to state 10

    $default  reduce using rule 3 (program)

    program       go to state 72
    declaration   go to state 12
    type          go to state 13
    statement     go to state 14
    compoundstmt  go to state 15
    item          go to state 16
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 45

   15 exprstmt: expr SEM .

    $default  reduce using rule 15 (exprstmt)


State 46

   19 logorexpr: logorexpr OP_LOGOR . logandexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    logandexpr  go to state 73
    orexpr      go to state 21
    xorexpr     go to state 22
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 47

   21 logandexpr: logandexpr OP_LOGAND . orexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    orexpr      go to state 74
    xorexpr     go to state 22
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 48

   23 orexpr: orexpr OP_OR . xorexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    xorexpr     go to state 75
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 49

   25 xorexpr: xorexpr OP_XOR . andexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    andexpr     go to state 76
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 50

   27 andexpr: andexpr OP_AND . ecmprexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    ecmprexpr   go to state 77
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 51

   29 ecmprexpr: ecmprexpr OP_EQ . cmprexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    cmprexpr    go to state 78
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 52

   30 ecmprexpr: ecmprexpr OP_NEQ . cmprexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    cmprexpr    go to state 79
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 53

   32 cmprexpr: cmprexpr OP_GT . arithexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    arithexpr   go to state 80
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 54

   33 cmprexpr: cmprexpr OP_LT . arithexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    arithexpr   go to state 81
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 55

   34 cmprexpr: cmprexpr OP_GTE . arithexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    arithexpr   go to state 82
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 56

   35 cmprexpr: cmprexpr OP_LTE . arithexpr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    arithexpr   go to state 83
    term        go to state 27
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 57

   37 arithexpr: arithexpr OP_ADD . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 84
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 58

   38 arithexpr: arithexpr OP_SUB . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 85
    factor      go to state 28
    identifier  go to state 34
    integer     go to state 31


State 59

   41 term: term OP_MUL . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 86
    identifier  go to state 34
    integer     go to state 31


State 60

   42 term: term OP_DIV . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 87
    identifier  go to state 34
    integer     go to state 31


State 61

   43 term: term OP_MOD . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 88
    identifier  go to state 34
    integer     go to state 31


State 62

   17 expr: variable OP_ASSIGN . expr

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5

    expr        go to state 89
    logorexpr   go to state 19
    logandexpr  go to state 20
    orexpr      go to state 21
    xorexpr     go to state 22
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    variable    go to state 29
    identifier  go to state 30
    integer     go to state 31


State 63

   47 factor: LP expr RP .

    $default  reduce using rule 47 (factor)


State 64

   10 compoundstmt: LBR items RBR .

    $default  reduce using rule 10 (compoundstmt)


State 65

   11 items: items item .

    $default  reduce using rule 11 (items)


State 66

   51 ctrlstmt: IF LP expr . RP statement
   52         | IF LP expr . RP statement ELSE statement

    RP  shift, and go to state 90


State 67

   53 ctrlstmt: WHILE LP expr . RP statement

    RP  shift, and go to state 91


State 68

   57 initstmt: declaration .

    $default  reduce using rule 57 (initstmt)


State 69

   56 initstmt: exprstmt .

    $default  reduce using rule 56 (initstmt)


State 70

   54 ctrlstmt: FOR LP initstmt . exprstmt expr RP statement
   55         | FOR LP initstmt . exprstmt RP statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    SEM     shift, and go to state 7

    exprstmt    go to state 92
    expr        go to state 18
    logorexpr   go to state 19
    logandexpr  go to state 20
    orexpr      go to state 21
    xorexpr     go to state 22
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    variable    go to state 29
    identifier  go to state 30
    integer     go to state 31


State 71

    4 declaration: type idlist SEM .

    $default  reduce using rule 4 (declaration)


State 72

    2 program: item $@1 program .

    $default  reduce using rule 2 (program)


State 73

   19 logorexpr: logorexpr OP_LOGOR logandexpr .
   21 logandexpr: logandexpr . OP_LOGAND orexpr

    OP_LOGAND  shift, and go to state 47

    $default  reduce using rule 19 (logorexpr)


State 74

   21 logandexpr: logandexpr OP_LOGAND orexpr .
   23 orexpr: orexpr . OP_OR xorexpr

    OP_OR  shift, and go to state 48

    $default  reduce using rule 21 (logandexpr)


State 75

   23 orexpr: orexpr OP_OR xorexpr .
   25 xorexpr: xorexpr . OP_XOR andexpr

    OP_XOR  shift, and go to state 49

    $default  reduce using rule 23 (orexpr)


State 76

   25 xorexpr: xorexpr OP_XOR andexpr .
   27 andexpr: andexpr . OP_AND ecmprexpr

    OP_AND  shift, and go to state 50

    $default  reduce using rule 25 (xorexpr)


State 77

   27 andexpr: andexpr OP_AND ecmprexpr .
   29 ecmprexpr: ecmprexpr . OP_EQ cmprexpr
   30          | ecmprexpr . OP_NEQ cmprexpr

    OP_EQ   shift, and go to state 51
    OP_NEQ  shift, and go to state 52

    $default  reduce using rule 27 (andexpr)


State 78

   29 ecmprexpr: ecmprexpr OP_EQ cmprexpr .
   32 cmprexpr: cmprexpr . OP_GT arithexpr
   33         | cmprexpr . OP_LT arithexpr
   34         | cmprexpr . OP_GTE arithexpr
   35         | cmprexpr . OP_LTE arithexpr

    OP_GT   shift, and go to state 53
    OP_LT   shift, and go to state 54
    OP_GTE  shift, and go to state 55
    OP_LTE  shift, and go to state 56

    $default  reduce using rule 29 (ecmprexpr)


State 79

   30 ecmprexpr: ecmprexpr OP_NEQ cmprexpr .
   32 cmprexpr: cmprexpr . OP_GT arithexpr
   33         | cmprexpr . OP_LT arithexpr
   34         | cmprexpr . OP_GTE arithexpr
   35         | cmprexpr . OP_LTE arithexpr

    OP_GT   shift, and go to state 53
    OP_LT   shift, and go to state 54
    OP_GTE  shift, and go to state 55
    OP_LTE  shift, and go to state 56

    $default  reduce using rule 30 (ecmprexpr)


State 80

   32 cmprexpr: cmprexpr OP_GT arithexpr .
   37 arithexpr: arithexpr . OP_ADD term
   38          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 57
    OP_SUB  shift, and go to state 58

    $default  reduce using rule 32 (cmprexpr)


State 81

   33 cmprexpr: cmprexpr OP_LT arithexpr .
   37 arithexpr: arithexpr . OP_ADD term
   38          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 57
    OP_SUB  shift, and go to state 58

    $default  reduce using rule 33 (cmprexpr)


State 82

   34 cmprexpr: cmprexpr OP_GTE arithexpr .
   37 arithexpr: arithexpr . OP_ADD term
   38          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 57
    OP_SUB  shift, and go to state 58

    $default  reduce using rule 34 (cmprexpr)


State 83

   35 cmprexpr: cmprexpr OP_LTE arithexpr .
   37 arithexpr: arithexpr . OP_ADD term
   38          | arithexpr . OP_SUB term

    OP_ADD  shift, and go to state 57
    OP_SUB  shift, and go to state 58

    $default  reduce using rule 35 (cmprexpr)


State 84

   37 arithexpr: arithexpr OP_ADD term .
   41 term: term . OP_MUL factor
   42     | term . OP_DIV factor
   43     | term . OP_MOD factor

    OP_MUL  shift, and go to state 59
    OP_DIV  shift, and go to state 60
    OP_MOD  shift, and go to state 61

    $default  reduce using rule 37 (arithexpr)


State 85

   38 arithexpr: arithexpr OP_SUB term .
   41 term: term . OP_MUL factor
   42     | term . OP_DIV factor
   43     | term . OP_MOD factor

    OP_MUL  shift, and go to state 59
    OP_DIV  shift, and go to state 60
    OP_MOD  shift, and go to state 61

    $default  reduce using rule 38 (arithexpr)


State 86

   41 term: term OP_MUL factor .

    $default  reduce using rule 41 (term)


State 87

   42 term: term OP_DIV factor .

    $default  reduce using rule 42 (term)


State 88

   43 term: term OP_MOD factor .

    $default  reduce using rule 43 (term)


State 89

   17 expr: variable OP_ASSIGN expr .

    $default  reduce using rule 17 (expr)


State 90

   51 ctrlstmt: IF LP expr RP . statement
   52         | IF LP expr RP . statement ELSE statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 93
    compoundstmt  go to state 15
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 91

   53 ctrlstmt: WHILE LP expr RP . statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 94
    compoundstmt  go to state 15
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 92

   54 ctrlstmt: FOR LP initstmt exprstmt . expr RP statement
   55         | FOR LP initstmt exprstmt . RP statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    RP      shift, and go to state 95

    expr        go to state 96
    logorexpr   go to state 19
    logandexpr  go to state 20
    orexpr      go to state 21
    xorexpr     go to state 22
    andexpr     go to state 23
    ecmprexpr   go to state 24
    cmprexpr    go to state 25
    arithexpr   go to state 26
    term        go to state 27
    factor      go to state 28
    variable    go to state 29
    identifier  go to state 30
    integer     go to state 31


State 93

   51 ctrlstmt: IF LP expr RP statement .
   52         | IF LP expr RP statement . ELSE statement

    ELSE  shift, and go to state 97

    $default  reduce using rule 51 (ctrlstmt)


State 94

   53 ctrlstmt: WHILE LP expr RP statement .

    $default  reduce using rule 53 (ctrlstmt)


State 95

   55 ctrlstmt: FOR LP initstmt exprstmt RP . statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 98
    compoundstmt  go to state 15
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 96

   54 ctrlstmt: FOR LP initstmt exprstmt expr . RP statement

    RP  shift, and go to state 99


State 97

   52 ctrlstmt: IF LP expr RP statement ELSE . statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 100
    compoundstmt  go to state 15
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 98

   55 ctrlstmt: FOR LP initstmt exprstmt RP statement .

    $default  reduce using rule 55 (ctrlstmt)


State 99

   54 ctrlstmt: FOR LP initstmt exprstmt expr RP . statement

    INT     shift, and go to state 1
    ID      shift, and go to state 2
    OP_SUB  shift, and go to state 4
    LP      shift, and go to state 5
    LBR     shift, and go to state 6
    SEM     shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10

    statement     go to state 101
    compoundstmt  go to state 15
    exprstmt      go to state 17
    expr          go to state 18
    logorexpr     go to state 19
    logandexpr    go to state 20
    orexpr        go to state 21
    xorexpr       go to state 22
    andexpr       go to state 23
    ecmprexpr     go to state 24
    cmprexpr      go to state 25
    arithexpr     go to state 26
    term          go to state 27
    factor        go to state 28
    variable      go to state 29
    identifier    go to state 30
    integer       go to state 31
    ctrlstmt      go to state 32


State 100

   52 ctrlstmt: IF LP expr RP statement ELSE statement .

    $default  reduce using rule 52 (ctrlstmt)


State 101

   54 ctrlstmt: FOR LP initstmt exprstmt expr RP statement .

    $default  reduce using rule 54 (ctrlstmt)
