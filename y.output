Terminals unused in grammar

    COMMA


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: declaration $@1 program
    3        | %empty

    4 declaration: type idlist SEM
    5            | statement

    6 type: TYPE_INT

    7 idlist: identifier

    8 statement: exprstmt
    9          | ctrlstmt

   10 exprstmt: expr SEM
   11         | SEM

   12 expr: identifier EQ expr
   13     | arithexpr

   14 arithexpr: arithexpr ADD term
   15          | arithexpr SUB term
   16          | SUB term
   17          | term

   18 term: term MUL factor
   19     | term DIV factor
   20     | term MOD factor
   21     | factor

   22 factor: identifier
   23       | integer
   24       | LP expr RP

   25 identifier: ID

   26 integer: INT

   27 ctrlstmt: IF LP expr RP statement
   28         | IF LP expr RP statement ELSE statement
   29         | WHILE LP expr RP statement
   30         | FOR LP exprstmt exprstmt expr RP statement
   31         | FOR LP exprstmt exprstmt RP statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <intNum> (258) 26
    ID <str> (259) 25
    TYPE_INT (260) 6
    ADD (261) 14
    SUB (262) 15 16
    MUL (263) 18
    DIV (264) 19
    MOD (265) 20
    EQ (266) 12
    LP (267) 24 27 28 29 30 31
    RP (268) 24 27 28 29 30 31
    SEM (269) 4 10 11
    COMMA (270)
    IF (271) 27 28
    ELSE (272) 28
    WHILE (273) 29
    FOR (274) 30 31
    IFX (275)


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program (22)
        on left: 2 3
        on right: 0 2
    $@1 (23)
        on left: 1
        on right: 2
    declaration <node> (24)
        on left: 4 5
        on right: 2
    type <node> (25)
        on left: 6
        on right: 4
    idlist <node> (26)
        on left: 7
        on right: 4
    statement <node> (27)
        on left: 8 9
        on right: 5 27 28 29 30 31
    exprstmt <node> (28)
        on left: 10 11
        on right: 8 30 31
    expr <node> (29)
        on left: 12 13
        on right: 10 12 24 27 28 29 30
    arithexpr <node> (30)
        on left: 14 15 16 17
        on right: 13 14 15
    term <node> (31)
        on left: 18 19 20 21
        on right: 14 15 16 17 18 19 20
    factor <node> (32)
        on left: 22 23 24
        on right: 18 19 20 21
    identifier <node> (33)
        on left: 25
        on right: 7 12 22
    integer <node> (34)
        on left: 26
        on right: 23
    ctrlstmt <node> (35)
        on left: 27 28 29 30 31
        on right: 9


State 0

    0 $accept: . program $end

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    SUB       shift, and go to state 4
    LP        shift, and go to state 5
    SEM       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9

    $default  reduce using rule 3 (program)

    program      go to state 10
    declaration  go to state 11
    type         go to state 12
    statement    go to state 13
    exprstmt     go to state 14
    expr         go to state 15
    arithexpr    go to state 16
    term         go to state 17
    factor       go to state 18
    identifier   go to state 19
    integer      go to state 20
    ctrlstmt     go to state 21


State 1

   26 integer: INT .

    $default  reduce using rule 26 (integer)


State 2

   25 identifier: ID .

    $default  reduce using rule 25 (identifier)


State 3

    6 type: TYPE_INT .

    $default  reduce using rule 6 (type)


State 4

   16 arithexpr: SUB . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 22
    factor      go to state 18
    identifier  go to state 23
    integer     go to state 20


State 5

   24 factor: LP . expr RP

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 4
    LP   shift, and go to state 5

    expr        go to state 24
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20


State 6

   11 exprstmt: SEM .

    $default  reduce using rule 11 (exprstmt)


State 7

   27 ctrlstmt: IF . LP expr RP statement
   28         | IF . LP expr RP statement ELSE statement

    LP  shift, and go to state 25


State 8

   29 ctrlstmt: WHILE . LP expr RP statement

    LP  shift, and go to state 26


State 9

   30 ctrlstmt: FOR . LP exprstmt exprstmt expr RP statement
   31         | FOR . LP exprstmt exprstmt RP statement

    LP  shift, and go to state 27


State 10

    0 $accept: program . $end

    $end  shift, and go to state 28


State 11

    2 program: declaration . $@1 program

    $default  reduce using rule 1 ($@1)

    $@1  go to state 29


State 12

    4 declaration: type . idlist SEM

    ID  shift, and go to state 2

    idlist      go to state 30
    identifier  go to state 31


State 13

    5 declaration: statement .

    $default  reduce using rule 5 (declaration)


State 14

    8 statement: exprstmt .

    $default  reduce using rule 8 (statement)


State 15

   10 exprstmt: expr . SEM

    SEM  shift, and go to state 32


State 16

   13 expr: arithexpr .
   14 arithexpr: arithexpr . ADD term
   15          | arithexpr . SUB term

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34

    $default  reduce using rule 13 (expr)


State 17

   17 arithexpr: term .
   18 term: term . MUL factor
   19     | term . DIV factor
   20     | term . MOD factor

    MUL  shift, and go to state 35
    DIV  shift, and go to state 36
    MOD  shift, and go to state 37

    $default  reduce using rule 17 (arithexpr)


State 18

   21 term: factor .

    $default  reduce using rule 21 (term)


State 19

   12 expr: identifier . EQ expr
   22 factor: identifier .

    EQ  shift, and go to state 38

    $default  reduce using rule 22 (factor)


State 20

   23 factor: integer .

    $default  reduce using rule 23 (factor)


State 21

    9 statement: ctrlstmt .

    $default  reduce using rule 9 (statement)


State 22

   16 arithexpr: SUB term .
   18 term: term . MUL factor
   19     | term . DIV factor
   20     | term . MOD factor

    MUL  shift, and go to state 35
    DIV  shift, and go to state 36
    MOD  shift, and go to state 37

    $default  reduce using rule 16 (arithexpr)


State 23

   22 factor: identifier .

    $default  reduce using rule 22 (factor)


State 24

   24 factor: LP expr . RP

    RP  shift, and go to state 39


State 25

   27 ctrlstmt: IF LP . expr RP statement
   28         | IF LP . expr RP statement ELSE statement

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 4
    LP   shift, and go to state 5

    expr        go to state 40
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20


State 26

   29 ctrlstmt: WHILE LP . expr RP statement

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 4
    LP   shift, and go to state 5

    expr        go to state 41
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20


State 27

   30 ctrlstmt: FOR LP . exprstmt exprstmt expr RP statement
   31         | FOR LP . exprstmt exprstmt RP statement

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 4
    LP   shift, and go to state 5
    SEM  shift, and go to state 6

    exprstmt    go to state 42
    expr        go to state 15
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20


State 28

    0 $accept: program $end .

    $default  accept


State 29

    2 program: declaration $@1 . program

    INT       shift, and go to state 1
    ID        shift, and go to state 2
    TYPE_INT  shift, and go to state 3
    SUB       shift, and go to state 4
    LP        shift, and go to state 5
    SEM       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9

    $default  reduce using rule 3 (program)

    program      go to state 43
    declaration  go to state 11
    type         go to state 12
    statement    go to state 13
    exprstmt     go to state 14
    expr         go to state 15
    arithexpr    go to state 16
    term         go to state 17
    factor       go to state 18
    identifier   go to state 19
    integer      go to state 20
    ctrlstmt     go to state 21


State 30

    4 declaration: type idlist . SEM

    SEM  shift, and go to state 44


State 31

    7 idlist: identifier .

    $default  reduce using rule 7 (idlist)


State 32

   10 exprstmt: expr SEM .

    $default  reduce using rule 10 (exprstmt)


State 33

   14 arithexpr: arithexpr ADD . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 45
    factor      go to state 18
    identifier  go to state 23
    integer     go to state 20


State 34

   15 arithexpr: arithexpr SUB . term

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    term        go to state 46
    factor      go to state 18
    identifier  go to state 23
    integer     go to state 20


State 35

   18 term: term MUL . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 47
    identifier  go to state 23
    integer     go to state 20


State 36

   19 term: term DIV . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 48
    identifier  go to state 23
    integer     go to state 20


State 37

   20 term: term MOD . factor

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    LP   shift, and go to state 5

    factor      go to state 49
    identifier  go to state 23
    integer     go to state 20


State 38

   12 expr: identifier EQ . expr

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 4
    LP   shift, and go to state 5

    expr        go to state 50
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20


State 39

   24 factor: LP expr RP .

    $default  reduce using rule 24 (factor)


State 40

   27 ctrlstmt: IF LP expr . RP statement
   28         | IF LP expr . RP statement ELSE statement

    RP  shift, and go to state 51


State 41

   29 ctrlstmt: WHILE LP expr . RP statement

    RP  shift, and go to state 52


State 42

   30 ctrlstmt: FOR LP exprstmt . exprstmt expr RP statement
   31         | FOR LP exprstmt . exprstmt RP statement

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 4
    LP   shift, and go to state 5
    SEM  shift, and go to state 6

    exprstmt    go to state 53
    expr        go to state 15
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20


State 43

    2 program: declaration $@1 program .

    $default  reduce using rule 2 (program)


State 44

    4 declaration: type idlist SEM .

    $default  reduce using rule 4 (declaration)


State 45

   14 arithexpr: arithexpr ADD term .
   18 term: term . MUL factor
   19     | term . DIV factor
   20     | term . MOD factor

    MUL  shift, and go to state 35
    DIV  shift, and go to state 36
    MOD  shift, and go to state 37

    $default  reduce using rule 14 (arithexpr)


State 46

   15 arithexpr: arithexpr SUB term .
   18 term: term . MUL factor
   19     | term . DIV factor
   20     | term . MOD factor

    MUL  shift, and go to state 35
    DIV  shift, and go to state 36
    MOD  shift, and go to state 37

    $default  reduce using rule 15 (arithexpr)


State 47

   18 term: term MUL factor .

    $default  reduce using rule 18 (term)


State 48

   19 term: term DIV factor .

    $default  reduce using rule 19 (term)


State 49

   20 term: term MOD factor .

    $default  reduce using rule 20 (term)


State 50

   12 expr: identifier EQ expr .

    $default  reduce using rule 12 (expr)


State 51

   27 ctrlstmt: IF LP expr RP . statement
   28         | IF LP expr RP . statement ELSE statement

    INT    shift, and go to state 1
    ID     shift, and go to state 2
    SUB    shift, and go to state 4
    LP     shift, and go to state 5
    SEM    shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    FOR    shift, and go to state 9

    statement   go to state 54
    exprstmt    go to state 14
    expr        go to state 15
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20
    ctrlstmt    go to state 21


State 52

   29 ctrlstmt: WHILE LP expr RP . statement

    INT    shift, and go to state 1
    ID     shift, and go to state 2
    SUB    shift, and go to state 4
    LP     shift, and go to state 5
    SEM    shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    FOR    shift, and go to state 9

    statement   go to state 55
    exprstmt    go to state 14
    expr        go to state 15
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20
    ctrlstmt    go to state 21


State 53

   30 ctrlstmt: FOR LP exprstmt exprstmt . expr RP statement
   31         | FOR LP exprstmt exprstmt . RP statement

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    SUB  shift, and go to state 4
    LP   shift, and go to state 5
    RP   shift, and go to state 56

    expr        go to state 57
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20


State 54

   27 ctrlstmt: IF LP expr RP statement .
   28         | IF LP expr RP statement . ELSE statement

    ELSE  shift, and go to state 58

    $default  reduce using rule 27 (ctrlstmt)


State 55

   29 ctrlstmt: WHILE LP expr RP statement .

    $default  reduce using rule 29 (ctrlstmt)


State 56

   31 ctrlstmt: FOR LP exprstmt exprstmt RP . statement

    INT    shift, and go to state 1
    ID     shift, and go to state 2
    SUB    shift, and go to state 4
    LP     shift, and go to state 5
    SEM    shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    FOR    shift, and go to state 9

    statement   go to state 59
    exprstmt    go to state 14
    expr        go to state 15
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20
    ctrlstmt    go to state 21


State 57

   30 ctrlstmt: FOR LP exprstmt exprstmt expr . RP statement

    RP  shift, and go to state 60


State 58

   28 ctrlstmt: IF LP expr RP statement ELSE . statement

    INT    shift, and go to state 1
    ID     shift, and go to state 2
    SUB    shift, and go to state 4
    LP     shift, and go to state 5
    SEM    shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    FOR    shift, and go to state 9

    statement   go to state 61
    exprstmt    go to state 14
    expr        go to state 15
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20
    ctrlstmt    go to state 21


State 59

   31 ctrlstmt: FOR LP exprstmt exprstmt RP statement .

    $default  reduce using rule 31 (ctrlstmt)


State 60

   30 ctrlstmt: FOR LP exprstmt exprstmt expr RP . statement

    INT    shift, and go to state 1
    ID     shift, and go to state 2
    SUB    shift, and go to state 4
    LP     shift, and go to state 5
    SEM    shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    FOR    shift, and go to state 9

    statement   go to state 62
    exprstmt    go to state 14
    expr        go to state 15
    arithexpr   go to state 16
    term        go to state 17
    factor      go to state 18
    identifier  go to state 19
    integer     go to state 20
    ctrlstmt    go to state 21


State 61

   28 ctrlstmt: IF LP expr RP statement ELSE statement .

    $default  reduce using rule 28 (ctrlstmt)


State 62

   30 ctrlstmt: FOR LP exprstmt exprstmt expr RP statement .

    $default  reduce using rule 30 (ctrlstmt)
